import{_ as p,F as o,o as e,c,S as a,k as n,J as t,a as E}from"./chunks/framework.d5a27ec8.js";const r="/fe-series-notes/assets/2023-05-18-14-57-59.ac485ec5.png",C=JSON.parse('{"title":"引入 TailWindCSS","description":"","frontmatter":{},"headers":[],"relativePath":"engineer/vue3-template/tailwind.md","filePath":"engineer/vue3-template/tailwind.md","lastUpdated":1721716027000}'),y={name:"engineer/vue3-template/tailwind.md"},i={id:"使用-windicss-替换-tailwindcss",tabindex:"-1"};function F(d,s,u,B,g,b){const l=o("Badge");return e(),c("div",null,[s[3]||(s[3]=a(`<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>更多关于 tailwindcss 的介绍，用法，性能等，参考：<a href="https://mp.weixin.qq.com/s/C9-611RHvUOhsAJi9J0bYw" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/s/C9-611RHvUOhsAJi9J0bYw</a></p></div><h1 id="引入-tailwindcss" tabindex="-1">引入 TailWindCSS <a class="header-anchor" href="#引入-tailwindcss" aria-label="Permalink to &quot;引入 TailWindCSS&quot;">​</a></h1><p>1、安装插件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark"><code><span class="line"><span style="color:#e1e4e8;">npm install tailwindcss@latest postcss@latest autoprefixer@latest -D</span></span></code></pre></div><p>2、新增<code>postcss.config.js</code>文件</p><p>将 <code>tailwindcss</code> 和 <code>autoprefixer</code> 添加到您的 PostCSS 配置中：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">// postcss.config.js</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    tailwindcss: {},</span></span>
<span class="line"><span style="color:#E1E4E8;">    autoprefixer: {},</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre></div><p>3、在 main.less 中引入即可</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">@tailwind</span><span style="color:#E1E4E8;"> base;</span></span>
<span class="line"><span style="color:#F97583;">@tailwind</span><span style="color:#E1E4E8;"> components;</span></span>
<span class="line"><span style="color:#F97583;">@tailwind</span><span style="color:#E1E4E8;"> utilities;</span></span></code></pre></div><p>4、在 main.ts 中引入 main.less 文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./assets/main.less&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre></div><p>5、通过<code>npx tailwindcss init</code>，生成 tailwind 配置文件：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{import(&#39;tailwindcss&#39;).Config}</span><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  content: [</span><span style="color:#9ECBFF;">&#39;./src/**/*.{html,js,vue,jsx}&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  theme: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    extend: {},</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: [],</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre></div>`,13)),n("h2",i,[s[0]||(s[0]=n("s",null,"使用 WindiCSS 替换 TailwindCSS",-1)),t(l,{type:"danger",text:"Deprecate"}),s[1]||(s[1]=E()),s[2]||(s[2]=n("a",{class:"header-anchor",href:"#使用-windicss-替换-tailwindcss","aria-label":'Permalink to "~~使用 WindiCSS 替换 TailwindCSS~~<Badge type="danger" text="Deprecate" />"'},"​",-1))]),s[4]||(s[4]=a('<div class="danger custom-block"><p class="custom-block-title">WindiCSS 官方已经不再维护!</p><p>查看链接：<a href="https://windicss.org/posts/sunsetting.html" target="_blank" rel="noreferrer">Windi CSS is Sunsetting</a></p></div><h2 id="tailwind-个性化配置" tabindex="-1">tailwind 个性化配置 <a class="header-anchor" href="#tailwind-个性化配置" aria-label="Permalink to &quot;tailwind 个性化配置&quot;">​</a></h2><blockquote><p>tailwindcss 默认全量配置：<a href="https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/config.full.js" target="_blank" rel="noreferrer">https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/config.full.js</a></p></blockquote><h3 id="伪类写法" tabindex="-1">伪类写法 <a class="header-anchor" href="#伪类写法" aria-label="Permalink to &quot;伪类写法&quot;">​</a></h3><p>修改器 hover, focus, before, after, group, important</p><ul><li>伪类选择器:<code>hover</code>,<code>focus</code>,<code>active</code></li><li>子选择器:<code>first</code>,<code>last</code>,<code>even</code>,<code>odd</code></li><li>父状态选择器:<code>group</code>&lt;- tailwindcss 特有</li><li>伪元素:<code>before</code>,<code>after</code></li><li><code>!important</code>修改器</li></ul><div class="language-HTML"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;hover: font-bold&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="响应式设计" tabindex="-1">响应式设计 <a class="header-anchor" href="#响应式设计" aria-label="Permalink to &quot;响应式设计&quot;">​</a></h3><p>对于一些需要 media query 实现的响应式样式，tailwindcss 提供了一组默认规则，使用 <code>min-width</code> 实现的断点功能实现响应式方案。</p><p><img src="'+r+`" alt=""></p><div class="language-HTML"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">className</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;flex flex-wrap sm:flex-nowrap&quot;</span><span style="color:#FDAEB7;font-style:italic;">/</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div><p>宽度也是可以配置的：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark"><code><span class="line"><span style="color:#e1e4e8;">screens: {</span></span>
<span class="line"><span style="color:#e1e4e8;">  sm: &#39;640px&#39;,</span></span>
<span class="line"><span style="color:#e1e4e8;">  md: &#39;768px&#39;,</span></span>
<span class="line"><span style="color:#e1e4e8;">  lg: &#39;1024px&#39;,</span></span>
<span class="line"><span style="color:#e1e4e8;">  xl: &#39;1280px&#39;,</span></span>
<span class="line"><span style="color:#e1e4e8;">  &#39;2xl&#39;: &#39;1536px&#39;,</span></span>
<span class="line"><span style="color:#e1e4e8;">},</span></span></code></pre></div><h3 id="自定义样式类" tabindex="-1">自定义样式类 <a class="header-anchor" href="#自定义样式类" aria-label="Permalink to &quot;自定义样式类&quot;">​</a></h3><blockquote><p>其实可以使用公共类替换。</p></blockquote><p>如果想在项目内添加自己实现的类，例如如下：</p><div class="language-CSS"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">.article</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">position</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">relative</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">orange</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">line-height</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1.2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">font-family</span><span style="color:#E1E4E8;">: ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">   @</span><span style="color:#79B8FF;">apply</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">text-ellipsis</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">.article1</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   @</span><span style="color:#79B8FF;">apply</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">inline-block</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">h-</span><span style="color:#E1E4E8;">12 </span><span style="color:#79B8FF;">w-</span><span style="color:#E1E4E8;">12 </span><span style="color:#79B8FF;">font-bold</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">flex</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">flex-col</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">itemscenter</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span></code></pre></div><p>这里 tailwind 建议写在主文件 (具有 tailwind 指令的文件) 并放在对应的 layer 下，所以需要改成如下</p><div class="language-CSS"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">@tailwind</span><span style="color:#E1E4E8;"> base;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@tailwind</span><span style="color:#E1E4E8;"> components;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@tailwind</span><span style="color:#E1E4E8;"> utilities;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@layer</span><span style="color:#E1E4E8;"> base {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      @</span><span style="color:#79B8FF;">apply</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">text-</span><span style="color:#E1E4E8;">2</span><span style="color:#79B8FF;">xl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">font-bold</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@layer</span><span style="color:#E1E4E8;"> components {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">.article</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">position</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">relative</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">orange</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">line-height</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1.2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">font-family</span><span style="color:#E1E4E8;">: ...;</span></span>
<span class="line"><span style="color:#E1E4E8;">       @</span><span style="color:#79B8FF;">apply</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">text-ellipsis</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">.article1</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">       @</span><span style="color:#79B8FF;">apply</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">inline-block</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">h-</span><span style="color:#E1E4E8;">12 </span><span style="color:#79B8FF;">w-</span><span style="color:#E1E4E8;">12 </span><span style="color:#79B8FF;">font-bold</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">flex</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">flex-col</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">itemscenter</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span></code></pre></div><p>通过@layer 和 @apply 就能扩展内置原子 class。</p><p>使用：</p><div class="language-HTML"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;article absolute&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="插件-plugin" tabindex="-1">插件 plugin <a class="header-anchor" href="#插件-plugin" aria-label="Permalink to &quot;插件 plugin&quot;">​</a></h3><p>其实上面那个 <code>@layer</code> 和 <code>@apply</code> 就能扩展内置原子 class。</p><p>但如果你想<strong>跨项目复用</strong>，那可以开发个 tailwind 插件：</p><p>自定义一个<code>tailwind.plugin.js</code>文件：</p><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">plugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;tailwindcss/plugin&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">plugin</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">({ </span><span style="color:#FFAB70;">addUtilities</span><span style="color:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">addUtilities</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;.aaa&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">            background: </span><span style="color:#9ECBFF;">&#39;blue&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            color: </span><span style="color:#9ECBFF;">&#39;yellow&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre></div><p>在 tailwind.config.js 里引入：</p><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{import(&#39;tailwindcss&#39;).Config}</span><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  purge: [</span><span style="color:#9ECBFF;">&quot;./src/**/*.html&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;./src/**/*.vue&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;./src/**/*.js&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  content: [],</span></span>
<span class="line"><span style="color:#E1E4E8;">  theme: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    extend: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./tailwind.plugin.js&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  ]</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre></div><p>使用：</p><div class="language-HTML"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;aaa&quot;</span><span style="color:#FDAEB7;font-style:italic;">/</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="tailwind-3-0-新特性" tabindex="-1">tailwind 3.0 新特性 <a class="header-anchor" href="#tailwind-3-0-新特性" aria-label="Permalink to &quot;tailwind 3.0 新特性&quot;">​</a></h3><blockquote><p>参考：<a href="https://segmentfault.com/a/1190000041150879" target="_blank" rel="noreferrer">https://segmentfault.com/a/1190000041150879</a></p></blockquote><p>JIT 模式</p><ul><li>闪电般的快速构建时间</li><li>能够使用[]语法</li><li>您的 CSS 在开发和生产中是相同的，因为是即时生成的</li><li>开发中更好的浏览器性能</li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>从 Tailwind CSS v2.1 开始，新的 JIT 引擎就包含在 Tailwind CSS 本身中，因此您不再需要 <code>@tailwindcss/jit</code> 包。但是在 2.x 中需要在写上下面内容：</p><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&#39;jit&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre></div><p>而在 v3.0 中，Tailwind 内置了 JIT，无需在配置文件里面声明 JIT 模式，默认就是按需构建、可使用任意辅助类、开发和生产构建方式与产物统一，避免了不一致性、还获得了极大的性能优化。</p></div><p>比如：临时设置一些值，可以用 <code>[]</code> 语法。</p><ul><li><code>w-[100px]</code> -&gt; <code>width: 100px</code></li><li><code>text-[#333]</code></li><li><code>top-[10px]</code></li><li><code>bg-[#999]</code></li></ul><p>其他的还有：</p><ul><li>所有的颜色都开箱即用</li><li>支持有颜色的阴影</li><li>滚动捕捉</li><li>多列布局</li><li>原生的表单控制样式</li><li>好看的下划线样式</li><li>RTL 与 LTR 修饰符</li><li>任意值辅助类支持</li><li>使用 CDN 来使用 Tailwind</li><li>...</li></ul><h2 id="tailwindcss-2-x-配置文件" tabindex="-1">tailwindcss 2.x 配置文件 <a class="header-anchor" href="#tailwindcss-2-x-配置文件" aria-label="Permalink to &quot;tailwindcss 2.x 配置文件&quot;">​</a></h2><blockquote><p>可直接复制后，按需修改使用！</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@type</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{import(&#39;tailwindcss&#39;).Config}</span><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">defaultTheme</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;tailwindcss/defaultTheme&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">colors</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;tailwindcss/colors&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">plugin</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;tailwindcss/plugin&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 生成 tailwindcss 的 属性值</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{number}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">n</span><span style="color:#6A737D;"> 生成的个数</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{number}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">per</span><span style="color:#6A737D;"> 倍率</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">unit</span><span style="color:#6A737D;"> 单位</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">generateValue</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">n</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">per</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">unit</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;px&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> n; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    obj[i] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">i</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">*</span><span style="color:#9ECBFF;"> </span><span style="color:#E1E4E8;">per</span><span style="color:#9ECBFF;">}\${</span><span style="color:#E1E4E8;">unit</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 个性化 tailwindcss 的 属性</span></span>
<span class="line"><span style="color:#6A737D;"> * 参考：https://juejin.cn/post/7074754321279090718</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  purge: [</span><span style="color:#9ECBFF;">&#39;./src/**/*.html&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;./src/**/*.vue&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;./src/**/*.js&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  mode: </span><span style="color:#9ECBFF;">&#39;jit&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  content: [],</span></span>
<span class="line"><span style="color:#E1E4E8;">  theme: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * 直接在 theme 属性中设置的基础类会完全覆盖原有的预设基础类</span></span>
<span class="line"><span style="color:#6A737D;">     * 比如：colors会覆盖colors类，而非只是覆盖其中的属性（所以一般不在这里面写）</span></span>
<span class="line"><span style="color:#6A737D;">     * */</span></span>
<span class="line"><span style="color:#E1E4E8;">    fontSize: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">//字号和行高，12号字体1行高</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// sm: [&quot;24px&quot;, &quot;24px&quot;], //最小12，12一下不能保证</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// base: [&quot;28px&quot;, &quot;40px&quot;],</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// lg: [&quot;32px&quot;, &quot;48px&quot;] // 以上三种为项目中主要字号，不以数字命名，其他特殊字号以数字命名</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * theme函数：如果在定制 theme 选项中的某个属性时，希望访问当前 theme 选项的其他属性的基础类，可以使用函数的方式（最后返回表示基础类的对象）</span></span>
<span class="line"><span style="color:#6A737D;">     * 注意：该函数只能用于 theme 选项下的一级属性，而不能直接用于设置次级属性</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">backgroundColor</span><span style="color:#E1E4E8;">: (</span><span style="color:#FFAB70;">theme</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">theme</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;colors&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * tabSize给plugin中的matchUtilities使用</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    tabSize: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;2&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;4&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;8&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">     * 在 theme 属性的 extend 属性下添加的基础类会以扩展添加新值的方式来添加自定义基础类（仍保留默认的基础类）</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    extend: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// spacing使用：padding, margin, width, height, maxHeight, gap, inset, space, and translate</span></span>
<span class="line"><span style="color:#E1E4E8;">      spacing: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">generateValue</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        sm: </span><span style="color:#9ECBFF;">&#39;8px&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        md: </span><span style="color:#9ECBFF;">&#39;12px&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        lg: </span><span style="color:#9ECBFF;">&#39;16px&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        xl: </span><span style="color:#9ECBFF;">&#39;24px&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 使用示例：class=&quot;bg-gray text-blue&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 如果希望在 HTML 页面使用一次自定义的任意颜色，可以通过 [color] 的方式来实现: class=&quot;bg-[#1da1f2]&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      colors: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">colors,</span></span>
<span class="line"><span style="color:#E1E4E8;">        blue: </span><span style="color:#9ECBFF;">&#39;#1890ff&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        purple: </span><span style="color:#9ECBFF;">&#39;#a37ae8&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        orange: </span><span style="color:#9ECBFF;">&#39;#fa8564&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        green: </span><span style="color:#9ECBFF;">&#39;#2bd99f&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        yellow: </span><span style="color:#9ECBFF;">&#39;#ffd85c&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 使用示例：class=&quot;bg-gray-333&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        gray: {</span></span>
<span class="line"><span style="color:#E1E4E8;">          DEFAULT: </span><span style="color:#9ECBFF;">&#39;#ccc&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 不带有后缀时，其默认的样式</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">333</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;#333&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">666</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;#666&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">999</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;#999&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 使用示例：class=&quot;rounded-5&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      borderRadius: </span><span style="color:#B392F0;">generateValue</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">       * 如果希望获取默认基础类的值，可以通过导入 tailwindcss/defaultTheme 来获取</span></span>
<span class="line"><span style="color:#6A737D;">       */</span></span>
<span class="line"><span style="color:#E1E4E8;">      fontFamily: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        sans: [</span><span style="color:#9ECBFF;">&#39;Lato&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">defaultTheme.fontFamily.sans],</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 禁止对某些核心插件的基础类进行编译</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#E1E4E8;">  corePlugins: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    opacity: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 禁止编译生成 opacity 基础类相应的样式</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * plugins 选项让我们可以通过创建插件的方式，以 JS 而非 CSS 方式来新增基础类、状态变量等。</span></span>
<span class="line"><span style="color:#6A737D;">   * 参考：https://juejin.cn/post/7074754321279090718#heading-6</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">plugin</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> ({ </span><span style="color:#FFAB70;">addBase</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">addUtilities</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">matchUtilities</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">theme</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">addComponents</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">prefix</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">config</span><span style="color:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 添加基础类，并将（重置）样式添加到 base 容器</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 由于重置样式 reset 一般匹配的是一类元素，例如 div、h1 等，为它们设置预设样式，以便在不同的浏览器中具有相同的初始样式</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">addBase</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        h1: { fontSize: </span><span style="color:#B392F0;">theme</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;fontSize.2xl&#39;</span><span style="color:#E1E4E8;">) },</span></span>
<span class="line"><span style="color:#E1E4E8;">        h2: { fontSize: </span><span style="color:#B392F0;">theme</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;fontSize.xl&#39;</span><span style="color:#E1E4E8;">) },</span></span>
<span class="line"><span style="color:#E1E4E8;">        h3: { fontSize: </span><span style="color:#B392F0;">theme</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;fontSize.lg&#39;</span><span style="color:#E1E4E8;">) },</span></span>
<span class="line"><span style="color:#E1E4E8;">      });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 样式添加到 components 容器</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 在 components 容器中添加的基础类，它们的样式都更复杂，一般用于设置一些具体的视觉元素的，如按钮、表单等</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">addComponents</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;.btn&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">          padding: </span><span style="color:#9ECBFF;">&#39;.5rem 1rem&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          borderRadius: </span><span style="color:#9ECBFF;">&#39;.25rem&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          fontWeight: </span><span style="color:#9ECBFF;">&#39;600&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;.btn-blue&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">          backgroundColor: </span><span style="color:#9ECBFF;">&#39;#3490dc&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          color: </span><span style="color:#9ECBFF;">&#39;#fff&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&#39;&amp;:hover&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">            backgroundColor: </span><span style="color:#9ECBFF;">&#39;#2779bd&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;.btn-red&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">          backgroundColor: </span><span style="color:#9ECBFF;">&#39;#e3342f&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          color: </span><span style="color:#9ECBFF;">&#39;#fff&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&#39;&amp;:hover&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">            backgroundColor: </span><span style="color:#9ECBFF;">&#39;#cc1f1a&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">      });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 添加静态自定义样式</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">addUtilities</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;.daotin&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">          background: </span><span style="color:#9ECBFF;">&#39;yellow&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          color: </span><span style="color:#9ECBFF;">&#39;blue&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">      });</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 添加动态自定义样式（乐意在 HTML 元素上使用时支持使用任意值，比如：tab-[13]，需要开启jit模式）</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">matchUtilities</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">tab</span><span style="color:#E1E4E8;">: (</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> ({</span></span>
<span class="line"><span style="color:#E1E4E8;">            tabSize: value,</span></span>
<span class="line"><span style="color:#E1E4E8;">          }),</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">        { values: </span><span style="color:#B392F0;">theme</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;tabSize&#39;</span><span style="color:#E1E4E8;">) }</span></span>
<span class="line"><span style="color:#E1E4E8;">      );</span></span>
<span class="line"><span style="color:#E1E4E8;">    }),</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre></div><h2 id="tailwindcss-3-x-配置文件" tabindex="-1">tailwindcss 3.x 配置文件 <a class="header-anchor" href="#tailwindcss-3-x-配置文件" aria-label="Permalink to &quot;tailwindcss 3.x 配置文件&quot;">​</a></h2><p>TODO</p>`,45))])}const m=p(y,[["render",F]]);export{C as __pageData,m as default};
