import{_ as e,o as i,c as t,S as r}from"./chunks/framework.d5a27ec8.js";const h=JSON.parse('{"title":"vue2-principle-learning","description":"","frontmatter":{},"headers":[],"relativePath":"vue2原理剖析/README.md","filePath":"vue2原理剖析/README.md","lastUpdated":1720490741000}'),u={name:"vue2原理剖析/README.md"};function a(n,l,o,p,s,c){return i(),t("div",null,l[0]||(l[0]=[r('<h1 id="vue2-principle-learning" tabindex="-1">vue2-principle-learning <a class="header-anchor" href="#vue2-principle-learning" aria-label="Permalink to &quot;vue2-principle-learning&quot;">​</a></h1><p>Vue2 官方文档：<a href="https://v2.cn.vuejs.org/v2/guide/index.html" target="_blank" rel="noreferrer">https://v2.cn.vuejs.org/v2/guide/index.html</a></p><p>学习资料（已学完）：<a href="https://juejin.cn/book/6844733705089449991" target="_blank" rel="noreferrer">https://juejin.cn/book/6844733705089449991</a></p><h2 id="源码学习" tabindex="-1">源码学习 <a class="header-anchor" href="#源码学习" aria-label="Permalink to &quot;源码学习&quot;">​</a></h2><blockquote><p>灵魂提问：学习 Vue 源码，到底是为了学习 Vue 的什么？</p></blockquote><p>我认为主要学习以下几点：</p><p>核心模块：</p><ul><li><strong><a href="./响应式系统/响应式原理.html">响应式原理</a></strong><ul><li>理解 Object.defineProperty 的用法及其在 Vue 中的应用。</li><li>学习 Vue 的响应式系统如何实现数据劫持、依赖收集和派发更新。</li><li>理解 Dep 和 Watcher 的关系及其在依赖收集和更新中的作用。</li></ul></li><li><strong>编译原理</strong><ul><li>模板解析： <ul><li>学习如何将模板字符串解析成抽象语法树 (AST)。</li><li>理解解析过程中如何处理指令、事件、绑定等。</li></ul></li><li>优化 AST： <ul><li>学习 Vue 如何通过静态节点标记优化 AST。</li></ul></li><li>代码生成： <ul><li>学习如何将优化后的 AST 转换成渲染函数。</li><li>理解渲染函数的生成和执行过程。</li></ul></li></ul></li><li><strong>虚拟 DOM</strong><ul><li>虚拟 DOM 的结构： <ul><li>学习虚拟 DOM 的基本结构 (VNode) 及其实现原理。</li></ul></li><li>虚拟 DOM 的创建和更新： <ul><li>理解渲染函数如何生成虚拟 DOM。</li><li>学习 patch 算法及其如何实现高效的 DOM 更新。</li></ul></li></ul></li><li><strong>渲染原理</strong><ul><li>初次渲染： <ul><li>学习组件实例化过程，包括数据初始化和渲染函数执行。</li><li>理解从虚拟 DOM 到真实 DOM 的映射过程。</li></ul></li><li>更新渲染： <ul><li>学习响应式数据更新时如何触发组件重新渲染。</li><li>理解组件的更新机制和 patch 算法如何优化更新过程</li></ul></li></ul></li></ul><p>其他模块：</p><ul><li>通信机制：包括 props、events(<code>$emit</code>)、slots 等</li><li>生命周期：理解 Vue 组件的生命周期钩子及其在各个阶段的作用</li><li>指令系统：学习内置指令的实现原理及其应用。理解自定义指令的编写和使用。</li><li>插件系统：学习 Vue 的插件机制，如何编写和使用插件。</li><li>学习 Vue Router 和 Vuex 的原理及其在大型应用中的应用。</li></ul>',10)]))}const g=e(u,[["render",a]]);export{h as __pageData,g as default};
