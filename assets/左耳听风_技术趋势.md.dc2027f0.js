import{_ as t,o as e,c as i,S as l}from"./chunks/framework.d5a27ec8.js";const g=JSON.parse('{"title":"技术趋势","description":"","frontmatter":{},"headers":[],"relativePath":"左耳听风/技术趋势.md","filePath":"左耳听风/技术趋势.md","lastUpdated":1715150373000}'),r={name:"左耳听风/技术趋势.md"};function o(n,a,s,p,c,u){return e(),i("div",null,a[0]||(a[0]=[l('<h1 id="技术趋势" tabindex="-1">技术趋势 <a class="header-anchor" href="#技术趋势" aria-label="Permalink to &quot;技术趋势&quot;">​</a></h1><p>如何识别什么样的<strong>新技术</strong>会是未来的趋势。</p><ul><li><strong>有没有一个比较好的社区。</strong> 像 C、C++、Java、Python 和 JavaScript 的生态圈都是非常丰富和火爆的。尤其是有很多商业机构参与的社区那就更是人气爆棚了，比如 Linux 社区。</li><li><strong>有没有一个工业化的标准</strong>。像 C、C++、Java 这些编程语言都是有标准化组织的。尤其是 Java，它在架构上还搞出了像 J2EE 这样的企业级标准。</li><li><strong>有没有一个或多个杀手级应用。</strong> C、C++ 和 Java 的杀手级应用不用多说了，就算是对于 PHP 这样还不能算是一个优秀的编程语言来说，因为是 Linux 时代的第一个杀手级解决方案 LAMP 中的关键技术，所以，也发展起来了。</li></ul><p>在我看来，上面提到的三点至关重要，新的技术只需要占到其中一到两点就已经很不错了，何况有的技术，比如 Java 三点全都满足，所以，Java 的蓬勃发展也在情理之中。</p><p>当然，除了上面这三点重要的，还有一些其它的影响因素，比如：</p><ul><li>学习难度是否低，上手是否快。这点非常重要，C++ 在这点上越做越不好了。</li><li>有没有一个不错的提高开发效率的开发框架。如：Java 的 Spring 框架，C++ 的 STL 等。（jQuery，Vue，React.....</li><li>是否有一个或多个巨型的技术公司作为后盾。如：Java 和 Linux 后面的 IBM、Sun……（Facebook，Google..</li><li>有没有解决软件开发中的痛点。如：Java 解决了 C 和 C++ 的内存管理问题。(了解javascript发展史........</li></ul><p><strong>为什么要早一点地进入这些新技术，而不是等待这些技术成熟了后再进入？</strong></p><ul><li>技术的发展过程非常重要。</li><li>这些关键新技术，可以让你提前抢占技术的先机</li></ul>',8)]))}const v=t(r,[["render",o]]);export{g as __pageData,v as default};
