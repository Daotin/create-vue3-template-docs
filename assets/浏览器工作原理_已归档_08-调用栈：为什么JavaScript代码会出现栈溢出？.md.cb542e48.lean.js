import{_ as a,o as n,c as l,S as p}from"./chunks/framework.d5a27ec8.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"浏览器工作原理/已归档/08-调用栈：为什么JavaScript代码会出现栈溢出？.md","filePath":"浏览器工作原理/已归档/08-调用栈：为什么JavaScript代码会出现栈溢出？.md","lastUpdated":1714650135000}'),o={name:"浏览器工作原理/已归档/08-调用栈：为什么JavaScript代码会出现栈溢出？.md"};function e(t,s,c,r,E,i){return n(),l("div",null,s[0]||(s[0]=[p(`<p>调用栈是一种用来管理执行上下文的数据结构，符合后进先出的规则。不过还有一点你要注意，<strong>调用栈是有大小的</strong>，当入栈的执行上下文超过一定数目，JavaScript 引擎就会报错，我们把这种错误叫做<strong>栈溢出</strong>。</p><p>下面是两段代码：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> myname</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;极客时间&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(myname)  </span><span style="color:#6A737D;">// 极客时间</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// let myname= &#39;极客邦&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> myname</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;极客时间&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(myname)  </span><span style="color:#6A737D;">// Uncaught ReferenceError: Cannot access &#39;myname&#39; before initialization</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> myname</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;极客邦&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre></div>`,4)]))}const d=a(o,[["render",e]]);export{_ as __pageData,d as default};
