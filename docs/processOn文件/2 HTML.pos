{"diagram":{"image":{"height":200,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","width":200,"y":0,"x":0},"elements":{"id":"root","structure":"mind_right","leftChildren":[],"title":"HTML","root":true,"theme":"mindmap","children":[{"id":"1097517a40f2","title":"语言","children":[{"id":"3aae70d322a3","title":"实体","children":[],"parent":"1097517a40f2"},{"id":"c3ee0a2c60ca","title":"命名空间","children":[],"parent":"1097517a40f2"},{"id":"8e46ad761e3e","title":"基本语法","children":[{"id":"79a011315bb8","title":"标签（元素）： &lt;div&gt;&lt;/div&gt;","children":[{"id":"c4792b2de284","title":"标签属性语法","parent":"79a011315bb8","children":[],"note":"属性可以使用单引号、双引号或者完全不用引号，这三种情况下，需要转义的部分都不太一样。\n\n--\n\n属性中可以使用`文本实体`（后文会介绍）来做转义，属性中，一定需要转义的有下面几种。\n\n- 无引号属性：&lt;tab&gt; &lt;LF&gt; &lt;FF&gt; &lt;SPACE&gt; &五种字符。\n- 单引号属性：&#39; &两种字符。\n- 双引号属性：&quot; &两种字符。"},{"id":"a103a9bb2cb2","title":"文本实体","children":[],"parent":"79a011315bb8","note":"&gt; 每一个文本实体由&开头，由;结束\n\n例如我们常用的：\n\n```\n&lt;\n&nbsp;\n&gt;\n&amp;\n```"}],"parent":"8e46ad761e3e"},{"id":"81e59ae56bc7","title":"文本<br>","children":[{"id":"af95c73c7636","title":"普通文本","parent":"81e59ae56bc7","children":[{"id":"27b200358a93","title":"&lt; 和 &amp; 需要转义","children":[],"parent":"af95c73c7636"}]},{"id":"ac4780a8e585","title":"CDATA文本<br>","parent":"81e59ae56bc7","children":[{"id":"f7d01e60a610","title":"在 CDATA 节点内，不需要考虑&lt; 和 &amp; 的转义情况。<br>CDATA 内，只有字符组合]]&gt;需要处理，这里不能使用转义，只能拆成两个 CDATA 节点。<br>","children":[],"parent":"ac4780a8e585"}]}],"parent":"8e46ad761e3e"},{"id":"9041ed6fa086","title":"注释： &lt;!--xxx--&gt;","children":[],"parent":"8e46ad761e3e"},{"id":"49af37fd0b8d","title":"DTD（Document Type Defination）文档类型定义: &lt;!Doctype html&gt;<br>","children":[{"id":"fe13f927210f","title":"HTML4.01<br>","parent":"49af37fd0b8d","children":[{"id":"c24a6fe1caf9","title":"严格模式","parent":"fe13f927210f","children":[],"note":"\n严格模式的 DTD 规定了 HTML4.01 中需要的标签。\n```\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;\n```"},{"id":"3822a2ac7aa6","title":"过度模式","parent":"fe13f927210f","children":[],"note":"过渡模式的 DTD 除了 html4.01，还包含了一些被贬斥的标签，这些标签已经不再推荐使用了，但是过渡模式中仍保留了它们。\n```\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;\n```"},{"id":"9016f6b73669","title":"frameset模式","children":[],"parent":"fe13f927210f","note":"\nframeset 结构的网页如今已经很少见到了，它使用 frameset 标签把几个网页组合到一起。\n```\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Frameset//EN&quot; &quot;http://www.w3.org/TR/html4/frameset.dtd&quot;&gt;\n```"}]},{"id":"92036fcde754","title":"XHTML","parent":"49af37fd0b8d","children":[{"id":"904f74127ba2","title":"版本1","parent":"92036fcde754","children":[],"note":"\n```\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; \n&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;\n```"},{"id":"a91db016e4d8","title":"版本2","children":[],"parent":"92036fcde754","note":"```\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;\nhttp://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n```"},{"id":"f7f7d3ed0bc5","title":"版本3","children":[],"parent":"92036fcde754","note":"```\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Frameset//EN&quot; \n&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd&quot;&gt;\n```"}]},{"id":"36ddb93b346a","title":"HTML5","parent":"49af37fd0b8d","children":[{"id":"ec3e9ece5f1a","title":"<br>&lt;!DOCTYPE html&gt;","parent":"36ddb93b346a","children":[]}]}],"parent":"8e46ad761e3e"},{"id":"5f16a98a8550","title":"处理信息: &lt;?a 1?&gt;","children":[],"parent":"8e46ad761e3e","note":"ProcessingInstruction 多数情况下，是给机器看的。HTML 中规定了可以有 ProcessingInstruction，但是并没有规定它的具体内容，所以可以把它视为一种保留的扩展机制。对浏览器而言，ProcessingInstruction 的作用类似于注释。\n\n-\n\nProcessingInstruction 包含两个部分，紧挨着第一个问号后，空格前的部分被称为“目标”，这个目标一般表示处理 ProcessingInstruction 的程序名。\n\n-\n\n剩余部分是它的文本信息，没有任何格式上的约定，完全由文档编写者和处理程序的编写者约定。"}],"parent":"1097517a40f2","note":"HTML的设计参考的SGML 语言。"}],"parent":"root","collapsed":false},{"id":"ba609fbbd9a5","title":"标签","children":[{"id":"f4996453c2fc","title":"文档元信息标签","children":[{"id":"a2a7ca996d40","title":"head标签","children":[],"parent":"f4996453c2fc","note":"head 标签本身并不携带任何信息，它主要是作为盛放其它语义类标签的容器使用。\n\n&lt;br&gt;\n\nhead 标签规定了自身必须是 html 标签中的`第一个标签`，它的内容`必须包含一个 title`，并且`最多只能包含一个 base`。如果文档作为 iframe，或者有其他方式指定了文档标题时，`可以允许不包含 title 标签`。"},{"id":"0d2dad76b063","title":"title标签","parent":"f4996453c2fc","children":[],"note":"### title 标签表示文档的标题\n\ntitle 与 h1 区别：\n\n title 应该是完整地概括整个网页内容的。而h1因为有上下文，所以可以是简写的标题。\n"},{"id":"a7fb3aa007e6","title":"base标签<br>","parent":"f4996453c2fc","children":[],"note":"base 标签实际上是个历史遗留标签。它的作用是给页面上所有的 URL 相对地址提供一个基础地址。\n\n&lt;br&gt;\n\nbase 标签最多只有一个，它改变全局的链接地址，它是一个非常危险的标签，容易造成跟 JavaScript 的配合问题，所以在实际开发中，我比较建议你使用 JavaScript 来代替 base 标签。"},{"id":"ffaeeb59ff33","title":"meta标签","children":[{"id":"dcd331335fcb","title":"基本定义","children":[],"parent":"ffaeeb59ff33","note":"meta 标签是一组键值对，在 head 中可以出现任意多个 meta 标签。\n\n&lt;br&gt;\n\n一般的 meta 标签由 `name` 和 `content` 两个属性来定义。\nname 表示元信息的名，content 则用于表示元信息的值。\n\n```\n  &lt;meta name=application-name content=&quot;lsForums&quot;&gt;\n```"},{"id":"4826e0c61293","title":"具有 charset 属性的 meta","children":[],"parent":"ffaeeb59ff33","note":"&gt; 添加了 charset 属性的 meta 标签无需再有 name 和 content。\n\n```\n  &lt;meta charset=&quot;UTF-8&quot; &gt;\n```\ncharset 型 meta 标签描述了 HTML 文档自身的编码形式。因此，我建议这个标签放在 head 的第一个。\n"},{"id":"d8642ce654a1","title":"具有 http-equiv 属性的 meta","children":[{"id":"91a717762baf","title":"<strike>content-type</strike><br>","parent":"d8642ce654a1","children":[],"note":"content-type：规定文档的字符编码。\n\n```&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;\n```\n\n&gt; **不要使用该指令因为它已过时。使用&lt;meta&gt; 元素的charset 属性 代替。**"},{"id":"a2de8b21e9b9","title":"<strike>content-language</strike>","children":[],"parent":"d8642ce654a1","note":"Content-Language 是一个 entity header （实体消息首部），用来说明`访问者希望采用的语言或语言组合`，这样的话用户就可以根据自己偏好的语言来定制不同的内容。\n\n&lt;br&gt;\n\n举个例子，假如设置了这样一条消息首部（ &quot;Content-Language: de-DE&quot; ），那么说明这份文件是为说德语的人提供的（当然这并不意味着文件本身就是用德语写的。比如，它可能是为说德语的人开设的英语教程的一部分，也就是用英语写的）。\n\n&gt; **使用方式: 不要使用这个指令，因为它已经过时了。使用 `&lt;html&gt;` 元素上全局的 `lang` 属性来替代它.**"},{"id":"6f394eb48328","title":"\"content-security-policy\"内容安全策略","parent":"d8642ce654a1","children":[],"note":"它允许页面作者定义当前页的 内容策略。 内容策略主要指定允许的服务器源和脚本端点，这有助于防止跨站点脚本攻击。"},{"id":"f436f28ac657","title":"default-style","children":[],"parent":"d8642ce654a1","note":"规定要使用的默认样式表。\n\n```\n&lt;meta http-equiv=&quot;default-style&quot; content=&quot;the document&#39;s preferred stylesheet&quot;&gt;\n```\n\n注释：上面 content 属性的值必须匹配同一文档中的一个 link 元素上的 title 属性的值，或者必须匹配同一文档中的一个 style 元素上的 title 属性的值。"},{"id":"1a7ecc387eb8","title":"refresh","parent":"d8642ce654a1","children":[],"note":"这个属性指定:\n- 如果content 只包含一个正整数,则是重新载入页面的时间间隔(秒);\n- 如果content 包含一个正整数并且跟着一个字符串,则是重定向到指定链接的时间间隔(秒)\n\n```\n&lt;meta http-equiv=&quot;refresh&quot; content=&quot;300;http://www.baidu.com&quot;&gt;\n```"},{"id":"5fed67c3b358","title":"<strike>set-cookie&nbsp; 页面定义cookie</strike>","children":[],"parent":"d8642ce654a1"}],"parent":"ffaeeb59ff33","note":"具有 http-equiv 属性的 meta 标签，表示`执行一个命令`，能改变服务器和用户引擎行为的编译.这样的 meta 标签可以不需要 name 属性。\n\n&lt;br&gt;\n\nhttp-equiv 属性有右边几个值：\n\n","collapsed":true},{"id":"53749d8b738f","title":"name 为 viewport 的 meta","children":[{"id":"cabf307e1f32","title":"width：页面宽度，可以取值具体的数字，也可以是 device-width，表示跟设备宽度相等。","children":[],"parent":"53749d8b738f"},{"id":"ce55d7318caa","title":"height：页面高度，可以取值具体的数字，也可以是 device-height，表示跟设备高度相等。<br>","children":[],"parent":"53749d8b738f"},{"id":"1b6a5b882ef9","title":"initial-scale：初始缩放比例。<br>","children":[],"parent":"53749d8b738f"},{"id":"bab54fb92d15","title":"minimum-scale：最小缩放比例。<br>","children":[],"parent":"53749d8b738f"},{"id":"7a56a781fe99","title":"maximum-scale：最大缩放比例。<br>","children":[],"parent":"53749d8b738f"},{"id":"48356d3213ed","title":"user-scalable：是否允许用户缩放。","children":[],"parent":"53749d8b738f"}],"parent":"ffaeeb59ff33","note":"它提供有关视口初始大小的提示，`仅供移动设备使用`。\n\n```\n&lt;meta name=&quot;viewport&quot; content=&quot;width=500, initial-scale=1&quot;&gt;\n```\n","collapsed":true},{"id":"2c8138133ca6","title":"其他name值的meta","parent":"ffaeeb59ff33","children":[{"id":"e9140d76a514","title":"author，就是这个文档的作者名称，可以用自由的格式去定义；","parent":"2c8138133ca6","children":[]},{"id":"6b1fa111fb66","title":"description，其中包含页面内容的简短和精确的描述。 一些浏览器，如Firefox和Opera，将其用作书签页面的默认描述。","parent":"2c8138133ca6","children":[]},{"id":"976070743c2d","title":"generator: 生成页面所使用的工具，主要用于可视化编辑器，如果是手写 HTML 的网页，不需要加这个 meta。","parent":"2c8138133ca6","children":[]},{"id":"1e54086e7fec","title":"keywords: 页面关键字，对于 SEO 场景非常关键。<br>","parent":"2c8138133ca6","children":[]},{"id":"ef7cd294dccc","title":"referrer: 跳转策略，是一种安全考量。","parent":"2c8138133ca6","children":[]}]}],"parent":"f4996453c2fc"},{"tags":[{"text":"link","color":"rgb(255, 255, 255)","background":"rgb(255, 159, 26)"}],"id":"a2cea420662c","title":"link标签","parent":"f4996453c2fc","children":[]}],"parent":"ba609fbbd9a5","note":"元信息类标签，就是 HTML 用于描述文档自身的一类标签，它们通常出现在 head 标签中，一般都不会在页面被显示出来（与此相对，其它标签，如语义类标签，描述的是业务）。","collapsed":true},{"id":"56f9937fad4d","title":"语义化标签","children":[{"id":"0eea3c4f3d7b","title":"是否需要语义化标签？","parent":"56f9937fad4d","children":[{"id":"9592cd9bcd4e","title":"不需要使用的情况","parent":"0eea3c4f3d7b","children":[{"id":"93b42fc49448","title":"大部分“软件界面”的东西不需要语义标签","parent":"9592cd9bcd4e","children":[],"note":"比如我们的表单，客服系统，输入框一定要textarea吗？加入购物车按钮一定要用button 吗？\n\n软件界面里的东西，实际上几乎是没有语义的。\n\n所以，我支持在任何“软件界面”的场景中，直接使用 div 和 span。"}]},{"id":"1ef7d3cb6c8b","title":"需要使用的情况","parent":"0eea3c4f3d7b","children":[{"id":"c9e2dc5589e2","title":"如何正确使用语义化标签？","children":[],"parent":"1ef7d3cb6c8b","note":"我们都知道 ul 是无序列表，ol 是有序列表，所以很多接触过语义这个概念，半懂不懂的前端工程师，特别喜欢给所有并列关系的元素都套上 ul。\n\n&gt; 对于语义标签，我的态度是：“用对”比“不用”好，“不用”比“用错”好。当然了，我觉得有理想的前端工程师还是应该去追求“用对”它们。"},{"id":"1113ebf519fc","title":"使用场景","parent":"1ef7d3cb6c8b","children":[{"id":"8905e22e0ac5","title":"作为自然语言延伸，用来表达一定的结构或者消除歧义。<br>","parent":"1113ebf519fc","children":[{"id":"d3d3985363ab","title":"表达一定的结构","children":[],"parent":"8905e22e0ac5","note":"比如 ruby 标签：\n\n```\n&lt;ruby&gt;\n    友善 &lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;bi shi&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; 的眼神\n&lt;/ruby&gt;\n```\n于是显示如下：\n\n&lt;ruby&gt;\n    友善 &lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;bi shi&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; 的眼神\n&lt;/ruby&gt;"},{"id":"88a71dc8b2f8","title":"消除歧义","parent":"8905e22e0ac5","children":[{"id":"e66dc730bd32","title":"em与strong的区别<br>","children":[],"parent":"88a71dc8b2f8","note":"- em 表示内容的重点，strong 表示强烈的重要性、严重性或内容的紧迫性\n\n- strong 不会改变所在句子的语意，仅仅为了区分其他内容或者便于用户优先查看某些内容；而 em 则会改变所在句子的语义。"}],"note":"```\n今天我吃了一个&lt;em&gt;苹果&lt;/em&gt;。\n今天我吃了&lt;em&gt;一个&lt;/em&gt;苹果。\n```\n\n强调的是“苹果”还是“一个”。"}],"note":""},{"id":"c17ea96246d6","title":"作为标题摘要，能够支持自动生成目录结构","children":[{"id":"31595779f8ea","title":"副标题","children":[],"parent":"c17ea96246d6","note":"### 我们使用 hgroup 标签产生副标题。\n\n\n首先看无hgroup 标签的时候：\n\n```\n&lt;h1&gt;JavaScript对象&lt;/h1&gt;\n&lt;h2&gt;我们需要模拟类吗？&lt;/h2&gt;\n&lt;p&gt;balah balah&lt;/p&gt;\n......\n```\n\n生成的目录结构：\n\n- JavaScript 对象\n    - 我们需要模拟类吗？\n    - 。。。。\n\n当有hgroup的时候：\n\n```\n&lt;hgroup&gt;\n&lt;h1&gt;JavaScript对象&lt;/h1&gt;\n&lt;h2&gt;我们需要模拟类吗？&lt;/h2&gt;\n&lt;/hgroup&gt;\n&lt;p&gt;balah balah&lt;/p&gt;\n......\n```\n\n就会生成下面的目录结构：\n\n- JavaScript对象——我们需要模拟类吗？\n    - 。。。\n\n我们通过两个效果的对比就可以知道，在 hgroup 中的 h1-h6 被视为同一标题的不同组成部分。\n\n\n"},{"id":"9f661c796836","title":"section标签","parent":"c17ea96246d6","children":[],"note":"### section 的嵌套会使得其中的 h1-h6 下降一级。\n\n因此，在 HTML5 以后，我们只需要 section 和 h1 就足以形成文档的树形结构：\n\n```\n&lt;section&gt;\n    &lt;h1&gt;HTML语义&lt;/h1&gt;\n    &lt;p&gt;balah balah balah balah&lt;/p&gt;\n    &lt;section&gt;\n        &lt;h1&gt;弱语义&lt;/h1&gt;\n        &lt;p&gt;balah balah&lt;/p&gt;\n    &lt;/section&gt;\n    &lt;section&gt;\n        &lt;h1&gt;结构性元素&lt;/h1&gt;\n        &lt;p&gt;balah balah&lt;/p&gt; \n    &lt;/section&gt;\n......\n&lt;/section&gt;\n```\n\n就得到如下结构：\n\n- HTML语义\n    - 弱语义\n    - 结构性元素\n    - 。。。"}],"parent":"1113ebf519fc","note":"如：\n\n```\n&lt;h1&gt;HTML语义&lt;/h1&gt;\n&lt;p&gt;balah balah balah balah&lt;/p&gt;\n&lt;h2&gt;弱语义&lt;/h2&gt;\n&lt;p&gt;balah balah&lt;/p&gt;\n&lt;h2&gt;结构性元素&lt;/h2&gt;\n&lt;p&gt;balah balah&lt;/p&gt;\n......\n```\n\n它的标题结构是：\n\n\n- HTML语义\n    - 弱语义\n    - 结构性元素\n    - 。。。\n\n\n\n&gt; h1-h6 是最基本的标题，它们表示了文章中不同层级的标题。"},{"id":"cb84ab8aabe0","title":"作为整体结构，适合浏览器的“阅读模式”，SEO，对视障用户的读屏软件更友好。<br>","parent":"1113ebf519fc","children":[{"id":"21c9b28c2ece","title":"header：通常出现在前部，表示导航或者介绍性的内容。","children":[],"parent":"cb84ab8aabe0"},{"id":"5b99053d8ada","title":"section：表示一个包含在HTML文档中的独立部分，它没有更具体的语义元素来表示，一般来说会有包含一个标题。","parent":"cb84ab8aabe0","children":[]},{"id":"2babd1fd288b","title":"article：它表示具有一定独立性质的文章。所以，article 和 body 具有相似的结构，可以理解为body中的小型body","parent":"cb84ab8aabe0","children":[],"note":"```\n&lt;body&gt;\n    &lt;header&gt;……&lt;/header&gt;\n    &lt;article&gt;\n        &lt;header&gt;……&lt;/header&gt;\n        &lt;section&gt;……&lt;/section&gt;\n        &lt;section&gt;……&lt;/section&gt;\n        &lt;section&gt;……&lt;/section&gt;\n        &lt;footer&gt;……&lt;/footer&gt;\n    &lt;/article&gt;\n    &lt;article&gt;\n        ……\n    &lt;/article&gt;\n    &lt;article&gt;\n        ……\n    &lt;/article&gt;\n    &lt;footer&gt;\n        &lt;address&gt;&lt;/address&gt;\n    &lt;/footer&gt;\n&lt;/body&gt;\n```"},{"id":"6fdb2458c3b9","title":"aside：表示跟文章主体不那么相关的部分，它可能包含侧边栏，导航、广告等工具性质的内容。","parent":"cb84ab8aabe0","children":[]},{"id":"613b61e31e29","title":"nav：在当前文档或其他文档中提供导航链接。导航部分的常见示例是菜单，目录和索引。","parent":"cb84ab8aabe0","children":[]},{"id":"2370651169cb","title":"footer：通常出现在尾部，包含一些作者信息、相关链接、版权信息等。","children":[],"parent":"cb84ab8aabe0","note":"footer 中包含 address，这是个非常容易被误用的标签。address 并非像 date 一样，表示一个给机器阅读的地址，而是表示“文章（作者）的联系方式”，address 明确地只关联到 article 和 body。"}],"note":"例如：\n\n```\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;nav&gt;\n            ……\n        &lt;/nav&gt;\n    &lt;/header&gt;\n    &lt;aside&gt;\n        &lt;nav&gt;\n            ……\n        &lt;/nav&gt;\n    &lt;/aside&gt;\n    &lt;section&gt;……&lt;/section&gt;\n    &lt;section&gt;……&lt;/section&gt;\n    &lt;section&gt;……&lt;/section&gt;\n    &lt;footer&gt;\n        &lt;address&gt;……&lt;/address&gt;\n    &lt;/footer&gt;\n&lt;/body&gt;\n```"}],"collapsed":false},{"id":"8275a57fd90f","title":"一个wiki示例网页","link":{"title":"World_Wide_Web","value":"http://static001.geekbang.org/static/time/quote/World_Wide_Web-Wikipedia.html","type":"url"},"children":[{"id":"8213baec7ffd","title":"极客时间对应章节","link":{"title":"","value":"https://time.geekbang.org/column/article/78168","type":"url"},"parent":"8275a57fd90f","children":[{"id":"f0e8b6eba98f","title":"aside","children":[],"parent":"8213baec7ffd"},{"id":"36c4310c174f","title":"article","parent":"8213baec7ffd","children":[]},{"id":"bb30e946c060","title":"hgroup, h1, h2","parent":"8213baec7ffd","children":[]},{"id":"4371259c3f57","title":"abbr：缩写标签","parent":"8213baec7ffd","children":[],"note":"```\n&lt;abbr title=&quot;World Wide Web&quot;&gt;WWW&lt;/abbr&gt;\n```"},{"id":"2385de7ff12f","title":"hr","parent":"8213baec7ffd","children":[]},{"id":"9e39e1a2bc98","title":"p","parent":"8213baec7ffd","children":[]},{"id":"b554fd8e49fb","title":"strong","parent":"8213baec7ffd","children":[]},{"id":"1ce0cf4696e4","title":"blockquote, q, cite","parent":"8213baec7ffd","children":[{"id":"3d4338a6cc1b","title":"blockquote 表示引用一段内容","parent":"1ce0cf4696e4","children":[]},{"id":"5bf120794639","title":"q 表示行内引用较短的内容而非创建一个单独的引用块","parent":"1ce0cf4696e4","children":[]},{"id":"cdac48d7e56f","title":"cite 表示引用原文出处\u00A0 URL 地址<br>","parent":"1ce0cf4696e4","children":[]}]},{"id":"9abb0e4c0029","title":"time标签","parent":"8213baec7ffd","children":[],"note":"\n为了让机器阅读更加方便.\n\n```&lt;time datetime=&quot;2015-07-16&quot;&gt;16 July 2015&lt;/time&gt;\n```"},{"id":"806a9f9da122","title":"figure, figcaption","parent":"8213baec7ffd","children":[],"note":"代表一段独立的内容, 经常与说明  `&lt;figcaption&gt;` 配合使用, 并且作为一个独立的引用单元。\n\n&gt; 这种插入文章中的内容，不仅限图片，代码、表格等，只要是具有一定自包含性（类似独立句子）的内容，都可以用 figure。\n\n用 figcaption 表示内容的标题，当然，也可以没有标题。\n\n```\n&lt;figure&gt;\n &lt;img src=&quot;https://.....440px-NeXTcube_first_webserver.JPG&quot;/&gt;\n &lt;figcaption&gt;The NeXT Computer used by Tim Berners-Lee at CERN.&lt;/figcaption&gt;\n&lt;/figure&gt;\n```"},{"id":"4c8d29105163","title":"dfn","children":[],"parent":"8213baec7ffd","note":"对于某个名词的定义，使用 dfn 标签，将定义的名词包裹起来。\n\n```\n&lt;dfn&gt;蜜蜂&lt;/dfn&gt;为社会性昆虫，由蜂王、雄蜂、工蜂等个体组成。\n```"},{"id":"1eb4648544f1","title":"nav, ol, ul","parent":"8213baec7ffd","children":[]},{"id":"d574bca3da02","title":"pre, samp, code ...","parent":"8213baec7ffd","children":[{"id":"7e2525a99d28","title":"pre","parent":"d574bca3da02","children":[],"note":"预定义格式文本。在该元素中的文本通常按照原文件中的编排，以等宽字体的形式展现出来，文本中的空白符（比如空格和换行符）都会显示出来。\n\n&gt; 也就是说，该文本已经排版过了，不要在动我的格式了，我是啥样，你就输出啥样。"},{"id":"6d0ce9b4d5b4","title":"samp","parent":"d574bca3da02","children":[],"note":"samp标签用于标记程序或计算机系统的输出，比如：\n\n```\n&lt;p&gt;The computer console displayed: &lt;samp&gt;ERROR: EACCESS&lt;/samp&gt; but I didn&#39;t know what that meant.&lt;/p&gt;\n```"},{"id":"c53c5d9cf92c","title":"code","parent":"d574bca3da02","children":[],"note":"顾名思义，code标签用于标记计算机程序代码，一般仅包含小的代码片段或关键词。\n\n&gt; 在Chrome浏览器中，code标签中的内容会使用等宽字体来进行显示，从而区别于其它文本。"},{"id":"4465280000d6","title":"var","parent":"d574bca3da02","children":[],"note":"### var标签用于标记“变量”内容\n\n&gt; 在Chrome浏览器中，var标签中的内容会使用斜体效果来进行显示。\n\n```\nIf &lt;var&gt;n&lt;/var&gt; plus 1 is equal to 2, what is &lt;var&gt;n&lt;/var&gt;?\n```\n\n"},{"id":"03d2b8e026ac","title":"kbd","parent":"d574bca3da02","children":[],"note":"### kbd (keyboard)标签用于标记用户输入的内容。\n\n虽然kbd是keyboard的缩写，但这种需要标记的用户输入内容并不局限于键盘输入 -- 复制粘贴、语音识别输入等其它方式的输入内容均可用kbd标签来进行标记。\n\n&lt;br&gt;\n\n当在samp标签内使用kbd时，kbd标签表示由用户输入而echo在显示器上的内容，如用户在命令行窗口中敲击并显示的命令。\n\n&lt;br&gt;\n\n与samp标签一样，Chrome浏览器中kbd标签会以等宽字体来进行显示。"}]},{"id":"ad49a0969288","title":"补充标签","children":[{"id":"87e65d5e3cd2","title":"","image":{"w":469,"h":473,"url":"http://cdn.processon.com/5e54ca92e4b0cc44b5ab1542?e=1582618786&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:SUEcRjcw151xsVMhH_92Dh9r3e8="},"parent":"ad49a0969288","children":[]}],"parent":"8213baec7ffd","collapsed":true}],"collapsed":false}],"parent":"1ef7d3cb6c8b","collapsed":false}],"collapsed":false}],"collapsed":true}],"parent":"ba609fbbd9a5","collapsed":true},{"id":"c37ce2f4b719","title":"链接","parent":"ba609fbbd9a5","children":[{"id":"1947790baa32","tags":[{"text":"link","color":"rgb(255, 255, 255)","background":"rgb(255, 159, 26)"}],"title":"link标签","link":{"title":"MDN-link","value":"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Link_types","type":"url"},"parent":"c37ce2f4b719","children":[{"id":"ea478c713b89","title":"超链接类 link 标签","parent":"1947790baa32","children":[{"id":"2a5de32a60fd","title":"rel=\"canonical\"<br>","children":[],"parent":"ea478c713b89","note":"```\n&lt;link rel=&quot;canonical&quot; href=&quot;...&quot;&gt;\n```\n\n这个标签提示页面它的主 URL，在网站中常常有多个 URL 指向同一页面的情况.\n\n通过这种方式，搜索引擎不需要索引同一页面多次，那样可能导致它被视为重复的内容或垃圾邮件，甚至从搜索引擎结果中删除或者降低你的页面显示排名。"},{"id":"5f99ba75bcaa","title":"rel=\"alternate\"","children":[],"parent":"ea478c713b89","note":"```\n&lt;link rel=&quot;alternate&quot; href=&quot;...&quot;&gt;\n```\n\n这个标签提示页面它的变形形式，这个所谓的变形可能是当前页面内容的不同格式、不同语言或者为不同的设备设计的版本，这种 link 通常也是提供给搜索引擎来使用的。\n\n--\n\nalternate 型的 link 的一个典型应用场景是，页面提供 rss 订阅时，可以用这样的 link 来引入：\n\n```\n&lt;link rel=&quot;alternate&quot; type=&quot;application/rss+xml&quot; title=&quot;RSS&quot; href=&quot;...&quot;&gt;\n```\n\n除了搜索引擎外，很多浏览器插件都能识别这样的 link。\n"},{"id":"9afdeed827f4","title":"rel=\"prev\"&nbsp;&nbsp;rel=\"next\"","children":[],"parent":"ea478c713b89","note":"在互联网应用中，很多网页都属于一个序列，比如分页浏览的场景，或者图片展示的场景，每个网页是序列中的一个项。\n\n&lt;br&gt;\n\n这种时候，就适合使用 prev 和 next 型的 link 标签，来告诉搜索引擎或者浏览器它的前一项和后一项，这有助于页面的批量展示。\n\n&lt;br&gt;\n\n因为 next 型 link 告诉浏览器“这是很可能访问的下一个页面”，HTML 标准还建议对 next 型 link 做预处理，在本课后面的内容，我们会讲到预处理类的 link。\n\n"},{"id":"8a47c0e36b26","title":"其他","parent":"ea478c713b89","children":[{"id":"90d72547cb69","title":"rel=“author” 链接到本页面的作者，一般是 mailto: 协议","parent":"8a47c0e36b26","children":[]},{"id":"2fad1668635e","title":"rel=“help” 链接到本页面的帮助页","parent":"8a47c0e36b26","children":[]},{"id":"c2c0e1e40f59","title":"rel=“license” 链接到本页面的版权信息页","parent":"8a47c0e36b26","children":[]},{"id":"9b179ba6b6bc","title":"rel=“search” 链接到本页面的搜索页面（一般是站内提供搜索时使用）","parent":"8a47c0e36b26","children":[]}]}],"note":"超链接型 link 标签是一种被动型链接，在用户不操作的情况下，它们`不会被主动下载`。\n\n"},{"id":"1f509a413307","title":"外部资源类 link 标签","parent":"1947790baa32","children":[{"id":"72764037406a","title":"rel=\"icon\"","children":[],"parent":"1f509a413307","note":"icon 型 link 中的图标地址默认会被浏览器下载和使用。\n\n&lt;br&gt;\n\n如果没有指定这样的 link，多数浏览器会使用域名根目录下的 `favicon.ico`，即使它并不存在，所以从性能的角度考虑，建议一定要保证页面中有 icon 型的 link。\n\n&lt;br&gt;\n\n只有 icon 型 link 有有效的 `sizes` 属性，HTML 标准允许一个页面出现多个 icon 型 link，并且用 sizes 指定它适合的 icon 尺寸。"},{"id":"c876c037f081","title":"预处理类 link","parent":"1f509a413307","children":[{"id":"2dcc78c9180c","title":"rel=\"dns-prefetch\"&nbsp;&nbsp;提前对一个域名做 dns 查询，这样的 link 里面的 href 实际上只有域名有意义。","parent":"c876c037f081","children":[]},{"id":"c4179cd79159","title":"rel=\"preconnect\"&nbsp;&nbsp;提前对一个服务器建立 tcp 连接。<br>","children":[],"parent":"c876c037f081"},{"id":"6cdac5faeb42","title":"rel=\"prefetch\"&nbsp;提前取 href 指定的 url 的内容。<br>","parent":"c876c037f081","children":[]},{"id":"3729225ddb8e","title":"rel=\"preload\"&nbsp;提前加载 href 指定的 url。<br>","children":[],"parent":"c876c037f081"},{"id":"93e4dad5d762","title":"rel=\"prerender\"&nbsp;提前渲染 href 指定的 url。","parent":"c876c037f081","children":[]}]},{"id":"5d894c39b506","title":"rel=\"modulepreload\"","parent":"1f509a413307","children":[],"note":"### 预先加载一个 JavaScript 的`模块`。这可以保证 JS 模块不必等到执行时才加载。\n\n这里的所谓加载，是指完成下载并放入内存，并不会执行对应的 JavaScript。\n\n```\n&lt;link rel=&quot;modulepreload&quot; href=&quot;app.js&quot;&gt;\n&lt;link rel=&quot;modulepreload&quot; href=&quot;helpers.js&quot;&gt;\n&lt;link rel=&quot;modulepreload&quot; href=&quot;irc.js&quot;&gt;\n&lt;script type=&quot;module&quot; src=&quot;app.js&quot;&gt;\n```\n\n假设 app.js 中有 import “irc”, 而 irc.js 中有 import “helpers”。这段代码使用 moduleload 型 link 来预加载了3个 js 模块。\n\n--\n\n尽管，单独使用 script 标签引用 app.js 也可以正常工作，但是我们通过加入对四个 JS 文件的 link 标签，使得四个 JS 文件有机会被并行地下载，这样提高了性能。"},{"id":"b410bfcabfd7","title":"rel=\"stylesheet\"","parent":"1f509a413307","children":[],"note":"### 从一个 CSS 文件创建一个样式表。\n\n&gt; 这里 type 属性可以没有，如果有，必须是&quot;text/css&quot;才会生效。\n\nrel 前可以加上 alternate，成为 rel=“alternate stylesheet”，此时必须再指定 title 属性。\n\n--\n\n这样可以为页面创建一份变体样式，一些浏览器，如 Firefox 3.0，支持从浏览器菜单中切换这些样式，然而大部分浏览器不支持这个功能。\n"},{"id":"58c9f0eeb9c1","title":"rel=\"pingback\"","children":[],"parent":"1f509a413307","note":"这样的 link 表示本网页被引用时，应该使用的 pingback 地址，这个机制是一份独立的标准，遵守 pingback 协议的网站在引用本页面时，会向这个 pingback url 发送一个消息。"}],"note":"外部资源型 link 标签`会被主动下载`，并且根据 rel 类型做不同的处理。"}],"collapsed":false},{"id":"41a8ac1a55e6","title":"a链接","children":[{"id":"f8bf43e1670d","title":"rel属性","link":{"title":"MDN-a","value":"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Link_types","type":"url"},"children":[],"parent":"41a8ac1a55e6"}],"parent":"c37ce2f4b719"},{"id":"1d49aabfbfc0","title":"area标签","link":{"title":"MDN-area","value":"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/area","type":"url"},"children":[{"id":"1202e9f90fca","title":" shape 属性","children":[{"id":"2c4a2c331965","title":"圆形：circle 或者 circ，coords 支持三个值，分别表示中心点的 x,y 坐标和圆形半径 r。","children":[],"parent":"1202e9f90fca"},{"id":"c657be1591e0","title":"矩形：rect 或者 rectangle，coords 支持两个值，分别表示两个对角顶点 x1，y1 和 x2，y2。","children":[],"parent":"1202e9f90fca"},{"id":"c12641fb185e","title":"多边形：poly 或者 polygon，coords 至少包括 6 个值，表示多边形的各个顶点。","children":[],"parent":"1202e9f90fca"}],"parent":"1d49aabfbfc0"}],"parent":"c37ce2f4b719","note":"area 标签与 a 标签非常相似，不同的是，它不是文本型的链接，而是区域型的链接。\n\n&gt; `&lt;area&gt;` 元素 在图片上定义一个热点区域，可以关联一个超链接。`&lt;area&gt;`元素仅在`&lt;map&gt;`元素内部使用。\n\narea 标签支持的 rel 与 a 完全一样，这里就不多说了。\n\n&gt; area 必须跟 `img` 和 `map` 标签配合使用。\n\n\n```\n&lt;p&gt;\n Please select a shape:\n &lt;img src=&quot;shapes.png&quot; usemap=&quot;#shapes&quot;\n      alt=&quot;Four shapes are available: a red hollow box, a green circle, a blue triangle, and a yellow four-pointed star.&quot;&gt;\n &lt;map name=&quot;shapes&quot;&gt;\n  &lt;area shape=rect coords=&quot;50,50,100,100&quot;&gt; &lt;!-- the hole in the red box --&gt;\n  &lt;area shape=rect coords=&quot;25,25,125,125&quot; href=&quot;red.html&quot; alt=&quot;Red box.&quot;&gt;\n  &lt;area shape=circle coords=&quot;200,75,50&quot; href=&quot;green.html&quot; alt=&quot;Green circle.&quot;&gt;\n  &lt;area shape=poly coords=&quot;325,25,262,125,388,125&quot; href=&quot;blue.html&quot; alt=&quot;Blue triangle.&quot;&gt;\n  &lt;area shape=poly coords=&quot;450,25,435,60,400,75,435,90,450,125,465,90,500,75,465,60&quot;\n        href=&quot;yellow.html&quot; alt=&quot;Yellow star.&quot;&gt;\n &lt;/map&gt;\n&lt;/p&gt;\n```\n这个例子展示了在一张图片上画热区并且产生链接，分别使用了矩形、圆形和多边形三种 area。"}],"note":"链接都是使用 `href` 表示资源地址。","collapsed":true},{"id":"9686a98e892e","title":"替换型元素<br>","parent":"ba609fbbd9a5","children":[{"id":"df0e6c2d75fc","title":"script","parent":"9686a98e892e","children":[],"note":"```\n\n&lt;script type=&quot;text/javascript&quot;&gt;\nconsole.log(&quot;Hello world!&quot;);\n&lt;/script&gt;\n\n\n&lt;script type=&quot;text/javascript&quot; src=&quot;my.js&quot;&gt;&lt;/script&gt;\n\n```"},{"id":"ea85b39934a1","title":"img","children":[{"id":"6b95f237bd5c","title":"src 可以是`地址`或者`data uri`","parent":"ea85b39934a1","children":[{"id":"cdfb85166791","title":"什么是Data URI Scheme?","link":{"title":"前端-Data URI Scheme","value":"https://www.jianshu.com/p/ea49397fcd13","type":"url"},"parent":"6b95f237bd5c","children":[{"id":"a520ead99d41","title":"data URI scheme 允许我们使用内联（inline-code）的方式在网页中包含数据，目的是将一些小的数据，直接嵌入到网页中，从而不用再从外部文件载入。常用于将图片嵌入网页。","parent":"cdfb85166791","children":[]}]}],"note":""},{"id":"87a01e1f4596","title":"img 标签可以使用 `width` 和 `height` 指定宽度和高度。也可以只指定其中之一。","parent":"ea85b39934a1","children":[]},{"id":"d0bb8cd4ee8a","title":"alt 属性对视障用户很重要。","children":[],"parent":"ea85b39934a1"},{"id":"a76800c259b1","title":"srcset和sizes配合：在不同的屏幕大小和特性下，使用不同的图片源。","children":[{"id":"1e6840834f9e","title":"srcset","parent":"a76800c259b1","children":[],"note":"以逗号分隔的一个或多个字符串列表表明一系列用户代理使用的可能的图像。每一个字符串由以下组成：\n\n- 指向图像的 URL。\n- 可选地，再加一个空格之后，附加以下的其一：\n    - 一个宽度描述符，这是一个正整数，后面紧跟 &#39;w&#39; 符号。该整数宽度除以sizes属性给出的资源（source）大小来计算得到有效的像素密度，即换算成和x描述符等价的值。\n    - 一个像素密度描述符，这是一个正浮点数，后面紧跟 &#39;x&#39; 符号。\n如果没有指定源描述符，那它会被指定为默认的 1x。\n\n在相同的 srcset 属性中混合使用宽度描述符和像素密度描述符时，会导致该值无效。重复的描述符（比如，两个源在相同的 srcset 两个源都是 2x）也是无效的。"},{"id":"6ddfdba2b238","title":"sizes","parent":"a76800c259b1","children":[],"note":"表示资源大小的、以逗号隔开的一个或多个字符串。每一个资源大小包括：\n\n- 一个媒体条件。最后一项一定是被忽略的。\n- 一个资源尺寸的值。"}],"parent":"ea85b39934a1","note":"```\n&lt;img srcset=&quot;elva-fairy-320w.jpg 320w,\n             elva-fairy-480w.jpg 480w,\n             elva-fairy-800w.jpg 800w&quot;\n     sizes=&quot;(max-width: 320px) 280px,\n            (max-width: 480px) 440px,\n            800px&quot;\n     src=&quot;elva-fairy-800w.jpg&quot; alt=&quot;Elva dressed as a fairy&quot;&gt;\n```"}],"parent":"9686a98e892e","note":"","collapsed":false},{"id":"23e6b3d627be","title":"picture","parent":"9686a98e892e","children":[],"note":"picture 元素可以根据屏幕的条件为其中的 img 元素提供不同的源，它的基本用法如下：\n\n```\n&lt;picture&gt;\n  &lt;source srcset=&quot;image-wide.png&quot; media=&quot;(min-width: 600px)&quot;&gt;\n  &lt;source srcset=&quot;image-small.png&quot; media=&quot;(min-width: 300px)&quot;&gt;\n  &lt;img src=&quot;image-narrow.png&quot;&gt;\n&lt;/picture&gt;\n```"},{"id":"8efabc3f6e1b","title":"video","parent":"9686a98e892e","children":[{"id":"b885751cb343","title":"&lt;track&gt;标签","children":[],"parent":"8efabc3f6e1b","note":"video中除了可以写source标签外，还可以写 `track` 标签。\n\n参考链接：[MDN-track标签](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/track)\n\n```\n&lt;video controls width=&quot;250&quot;\n       src=&quot;/media/examples/friday.mp4&quot;&gt;\n\n    &lt;track default kind=&quot;captions&quot;\n           srclang=&quot;en&quot;\n           src=&quot;/media/examples/friday.vtt&quot;/&gt;\n\n    Sorry, your browser doesn&#39;t support embedded videos.\n&lt;/video&gt;\n```"}],"note":"古典video用法：\n\n```\n&lt;video controls=&quot;controls&quot; src=&quot;movie.ogg&quot;&gt;\n&lt;/video&gt;\n```\n\nvideo 标签跟 img 标签类似，也是使用 src 属性来引入源文件的，不过，考虑到了各家浏览器支持的视频格式不同，现在的 video 标签跟 picture 元素一样，也是提倡使用 `source` 的。\n\n```\n&lt;video controls=&quot;controls&quot; &gt;\n  &lt;source src=&quot;movie.webm&quot; type=&quot;video/webm&quot; &gt;\n  &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot; &gt;\n  &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;\n  You browser does not support video.\n&lt;/video&gt;\n```"},{"id":"9c8c087a88fe","title":"audio","parent":"9686a98e892e","children":[],"note":"类似 video。\n\n```\n&lt;audio controls&gt;\n  &lt;source src=&quot;song.mp3&quot; type=&quot;audio/mpeg&quot;&gt;\n  &lt;source src=&quot;song.ogg&quot; type=&quot;audio/ogg&quot;&gt;\n  &lt;p&gt;You browser does not support audio.&lt;/p&gt;\n&lt;/audio&gt;\n```\n\n&gt; 但比起 video，audio 元素的历史问题并不严重，所以使用 src 也是没有问题的。"},{"id":"ed1549c23c4d","title":"iframe","link":{"title":"MDN-iframe","value":"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/iframe","type":"url"},"children":[],"parent":"9686a98e892e","note":" iframe，这个标签能够嵌入一个完整的网页。\n\n&gt; 缺点：\n- 在移动端，iframe 受到了相当多的限制，它无法指定大小，里面的内容会被完全平铺到父级页面上。\n- 很多网页也会通过 http 协议头禁止自己被放入 iframe 中。\n- iframe 标签也是各种安全问题的重灾区。opener、window.name、甚至 css 的 opacity 都是黑客可以利用的漏洞。\n\n&lt;font color=red&gt;所以，iframe不推荐使用。&lt;/font&gt;\n\n---\n\n古典iframe用法：\n\n```\n&lt;iframe src=&quot;http://time.geekbang.org&quot;&gt;&lt;/iframe&gt;\n```\n\n在新标准中，为 iframe 加入了 `sandbox 模式`和 `srcdoc 属性`，这样，给 iframe 带来了一定的新场景可以使用：\n\n```\n&lt;iframe sandbox srcdoc=&quot;&lt;p&gt;Yeah, you can see it &lt;a href=&quot;/gallery?mode=cover&amp;amp;page=1&quot;&gt;in my gallery&lt;/a&gt;.&lt;/p&gt;&quot;&gt;&lt;/iframe&gt;\n\n```\n\n这个例子中，使用 srcdoc 属性创建了一个新的文档，嵌入在 iframe 中展示，并且使用了 sandbox 来隔离。\n\n这样，这个 iframe 就不涉及任何跨域问题了。"}],"note":"替换型元素，顾名思义就是把文件的内容引入，替换掉自身位置的一类标签。\n\n&gt; 替换型元素与链接的区别，替换型元素使用 `src` 表示资源地址。","collapsed":true},{"id":"ec411f99fac3","title":"表单","children":[],"parent":"ba609fbbd9a5"},{"id":"d40cf9e6a7ec","title":"表格","children":[],"parent":"ba609fbbd9a5"},{"id":"9f88363d57b7","title":"总集","children":[],"parent":"ba609fbbd9a5"}],"parent":"root","collapsed":false},{"id":"0e5c702f5131","title":"扩展","children":[{"id":"7cf52900e30d","title":"ARIA 标准","link":{"title":"MDN-ARIA","value":"https://developer.mozilla.org/zh-CN/docs/Web/Accessibility/ARIA","type":"url"},"parent":"0e5c702f5131","children":[{"id":"c48fafb622b3","title":"roles","link":{"title":"","value":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques","type":"url"},"parent":"7cf52900e30d","children":[{"id":"1d0d826fff46","title":"Widget roles 可交互组件的roles<br>","parent":"c48fafb622b3","children":[]},{"id":"aa982a5a686d","title":"Document structure roles 文档结构","children":[],"parent":"c48fafb622b3"},{"id":"94ff106bbd20","title":"window Roles 弹出窗口","children":[],"parent":"c48fafb622b3"}]}],"note":"Accessible Rich Internet Applications (ARIA) 是能够让残障人士更加便利的访问 Web 内容和使用 Web 应用（特别是那些由JavaScript 开发的）的一套机制。\n\n&lt;br&gt;\n\nARIA 是一组特殊的易用性属性，可以添加到任意标签上，尤其适用于 HTML。role 属性定义了对象的通用类型（例如文章、警告，或幻灯片）。额外的 ARIA 属性提供了其他有用的特性，例如表单的描述或进度条的当前值。\n\n&lt;br&gt;\n\n关于可访问性，它被提到最多的，就是它可以为视觉障碍用户服务，但是，这是一个误解。\n\n&lt;br&gt;\n\n实际上，可访问性其实是一个相当大的课题，它的定义包含了各种设备访问、各种环境、各种人群访问的友好性。不单单是永久性的残障人士需要用到可访问性，健康的人也可能在特定时刻处于需要可访问性的环境。\n\n--- \n\n示例：\n\n```\n&lt;div id=&quot;percent-loaded&quot; role=&quot;progressbar&quot; aria-valuenow=&quot;75&quot; \n     aria-valuemin=&quot;0&quot; aria-valuemax=&quot;100&quot; /&gt;\n```\n\n由于这个滚动条是用div写的，没有字面含义。然而，对开发者来说，在HTML4中，又没有更多的语义化的标签，所以我们需要引入ARIA这个角色和属性，这些是通过向元素添加属性来指定的。\n\n举个例子，`role=&quot;progressbar&quot;`这个属性告诉浏览器，该元素其实是一个JavaScript实现的进度条组件。`aria-valuemin` 和`aria-valuemax` 属性表明了进度条的最小值和最大值。 `aria-valuenow`则描述了当前进度条的状态， 因此它得用JavaScript来更新。\n\n&lt;br&gt;\n\n除了直接给标签加属性，还可以通过JavaScript代码把ARIA属性添加到元素并动态地更新，如下面所示：\n\n```\n// Find the progress bar &lt;div&gt; in the DOM.\n var progressBar = document.getElementById(&quot;percent-loaded&quot;);\n\n// Set its ARIA roles and states, \n// so that assistive technologies know what kind of widget it is.\n progressBar.setAttribute(&quot;role&quot;, &quot;progressbar&quot;);\n progressBar.setAttribute(&quot;aria-valuemin&quot;, 0);\n progressBar.setAttribute(&quot;aria-valuemax&quot;, 100);\n\n// Create a function that can be called at any time to update \n// the value of the progress bar.\n function updateProgress(percentComplete) {\n   progressBar.setAttribute(&quot;aria-valuenow&quot;, percentComplete);\n }\n```"},{"id":"ef71f4939fc1","title":"HTML小实验：代码挖掘所有html标签","parent":"0e5c702f5131","children":[]}],"parent":"root"}],"lines":{}}},"meta":{"id":"5e61a2d8e4b03ecc75233d24","member":"5e488f9ee4b03d4e28b975b2","exportTime":"2020-03-19 10:56:16","diagramInfo":{"category":"mind_free","title":"2 HTML","created":"2020-03-06 09:09:44","creator":"5e488f9ee4b03d4e28b975b2","modified":"2020-03-08 15:20:08"},"type":"ProcessOn Schema File","version":"1.0"}}