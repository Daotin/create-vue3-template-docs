{"diagram":{"image":{"height":200,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","width":200,"y":0,"x":0},"elements":{"id":"root","title":"CSS","leftChildren":[],"structure":"mind_right","root":true,"theme":"mindmap","children":[{"id":"6514fa74dc3b","title":"功能","children":[{"id":"0a74b538cfa4","title":"布局","parent":"6514fa74dc3b","children":[{"id":"0e8bb5f10c5d","title":"正常流","parent":"0a74b538cfa4","children":[{"id":"4d4231b27038","title":"规则","children":[{"id":"5053c531cf96","title":"块级盒：从上到下依次排列","parent":"4d4231b27038","children":[]},{"id":"f2e625bf6fb3","title":"行内盒：从左到右依次排列","children":[],"parent":"4d4231b27038"}],"parent":"0e8bb5f10c5d"},{"id":"593f8fcf3b67","title":"示例：把正常流中的一个盒或者文字排版","children":[{"id":"c3e5f6f9f768","title":"当遇到块级盒：排入块级规则","children":[],"parent":"593f8fcf3b67"},{"id":"14b202374ac5","title":"当遇到行内级盒或者文字：首先尝试排入行内级规则，<br>如果排不下，那么创建一个行盒，先将行盒排版（行盒是块级，所以到第一种情况），然后行盒内会创建一个行内规则。","parent":"593f8fcf3b67","children":[]},{"id":"0bd1206e4973","title":"遇到 float 盒：把盒的顶部跟当前行内规则上边缘对齐，然后根据 float 的方向把盒的对应边缘对到块级规则的边缘，之后重排当前行盒。","children":[],"parent":"593f8fcf3b67"}],"parent":"0e8bb5f10c5d"},{"id":"52fe04d9830c","title":"正常流布局主要是使用 inline-block 来作为内容的容器，利用块级规则的纵向排布和行内级规则的横向排布来完成布局的，我们需要根据需求的横向和纵向排布要求，来选择元素的 display 属性。<br>","parent":"0e8bb5f10c5d","children":[]}],"note":"#### “依次排列，排不下了换行”","collapsed":true},{"id":"90944b3b85e9","title":"Flex弹性布局","parent":"0a74b538cfa4","children":[{"id":"c7be2bc7f49e","title":"实现原理","parent":"90944b3b85e9","children":[{"id":"4d00c44f01b7","title":"参考1","link":{"title":"弹性盒子","value":"https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox","type":"url"},"parent":"c7be2bc7f49e","children":[{"id":"fe0fb6ec40ec","title":"参考2","link":{"title":"Flex布局原理介绍","value":"https://alisec-ued.github.io/2017/01/03/Flex%E5%B8%83%E5%B1%80%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D/","type":"url"},"parent":"4d00c44f01b7","children":[]}]},{"id":"efbdb2c10c1c","title":"分行","parent":"c7be2bc7f49e","children":[]},{"id":"3d29e82de0f6","title":"计算主轴","parent":"c7be2bc7f49e","children":[]},{"id":"5d40a8d475b0","title":"计算交叉轴","parent":"c7be2bc7f49e","children":[]}]}]}],"collapsed":true},{"id":"0834862ce432","title":"绘制","parent":"6514fa74dc3b","children":[{"id":"264e8aae8e33","title":"颜色","children":[{"id":"f575330d179d","title":"颜色值","children":[{"id":"ffdb5688b355","title":"RGB/RGBA<br>","children":[],"parent":"f575330d179d"},{"id":"f0df6eb0ca02","title":"CMYK<br>","link":{"title":"RGB与CMYK区别","value":"https://www.zhihu.com/question/22423020/answer/148503162","type":"url"},"children":[],"parent":"f575330d179d"},{"id":"9404c8dd450d","title":"HSL（色相（H）纯度（S）和明度（L））","children":[],"parent":"f575330d179d","image":{"w":300,"h":144,"url":"http://cdn.processon.com/5e5a1152e4b0cc44b5b3a88e?e=1582964578&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:8WlfonfTGQa0BW6MLmo9QnJRjws="},"note":""}],"parent":"264e8aae8e33"},{"id":"c2d6ab50013f","title":"渐变","children":[{"id":"5568000fa9b0","title":"线性渐变&nbsp;linear-gradient","children":[],"parent":"c2d6ab50013f"},{"id":"b95d7091fa3f","title":"径向渐变&nbsp;radial-gradient","children":[],"parent":"c2d6ab50013f"}],"parent":"264e8aae8e33"},{"id":"e81a350431de","title":"形状","children":[{"id":"fa56b2c7f084","title":"border","children":[],"parent":"e81a350431de"},{"id":"1a3a85cd605a","title":"box-shadow","children":[],"parent":"e81a350431de"},{"id":"c944b3802562","title":"border-radius","children":[],"parent":"e81a350431de"}],"parent":"264e8aae8e33","note":"这些产生形状的属性非常有趣，我们也能看到很多利用它们来产生的 CSS 黑魔法。\n\n&lt;br&gt;\n\n然而，这里我有一个相反的建议，我们仅仅把它们用于基本的用途，把 border 用于边框、把阴影用于阴影，把圆角用于圆角，所有其它的场景，都有一个更好的替代品：`datauri + svg`。"},{"id":"98654a26cca9","title":"颜色滤镜 filter<br>","children":[{"id":"47f4756f0364","title":"filter: hue-rotate(180deg);","parent":"98654a26cca9","children":[],"image":{"w":387,"url":"http://cdn.processon.com/5e5a1599e4b0541c5e13a2d3?e=1582965674&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:dL8rfzvZhCExIF4IGAPt2N-MLjo=","h":145}}],"parent":"264e8aae8e33"}],"parent":"0834862ce432","collapsed":true}]},{"id":"160ffc2207f8","title":"交互","parent":"6514fa74dc3b","children":[]},{"id":"ff7deeb8fae0","title":"动画","parent":"6514fa74dc3b","children":[{"id":"09e767778c51","title":"animation属性","parent":"ff7deeb8fae0","children":[]},{"id":"f2aac108d03d","title":"transition 属性","parent":"ff7deeb8fae0","children":[]},{"id":"2a8f980dfee6","title":"为什么 CSS 的时间曲线要选用（三次）贝塞尔曲线呢？","parent":"ff7deeb8fae0","children":[{"id":"5b38cd25c90d","title":"贝塞尔曲线","parent":"2a8f980dfee6","children":[],"note":"贝塞尔曲线是一种插值曲线，它描述了两个点之间差值来形成连续的曲线形状的规则。\n\n&lt;br&gt;\n\n一个量（可以是任何矢量或者标量）从一个值到变化到另一个值，如果我们希望它按照一定时间平滑地过渡，就必须要对它进行插值。\n\n&lt;br&gt;\n\n最基本的情况，我们认为这个变化是按照时间均匀进行的，这个时候，我们称其为线性插值。而实际上，线性插值不大能满足我们的需要，因此数学上出现了很多其它的插值算法，其中贝塞尔插值法是非常典型的一种。它根据一些变换中的控制点来决定值与时间的关系。\n\n&lt;br&gt;\n\n贝塞尔曲线是一种被工业生产验证了很多年的曲线，它最大的特点就是“平滑”。时间曲线平滑，意味着较少突兀的变化，这是一般动画设计所追求的。"},{"id":"6948b761b167","title":"贝塞尔曲线拟合","parent":"2a8f980dfee6","children":[],"note":"理论上，贝塞尔曲线可以通过分段的方式拟合任意曲线，但是有一些特殊的曲线，是可以用贝塞尔曲线完美拟合的，比如抛物线。\n\n```&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;\n    &lt;title&gt;Simulation&lt;/title&gt;\n    &lt;style&gt;\n        .ball {\n            width: 10px;\n            height: 10px;\n            background-color: black;\n            border-radius: 5px;\n            position: absolute;\n            left: 0;\n            top: 0;\n            transform: translateY(180px);\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;label&gt;运动时间：&lt;input value=&quot;3.6&quot; type=&quot;number&quot; id=&quot;t&quot; /&gt;s&lt;/label&gt;&lt;br /&gt;\n    &lt;label&gt;初速度：&lt;input value=&quot;-21&quot; type=&quot;number&quot; id=&quot;vy&quot; /&gt; px/s&lt;/label&gt;&lt;br /&gt;\n    &lt;label&gt;水平速度：&lt;input value=&quot;21&quot; type=&quot;number&quot; id=&quot;vx&quot; /&gt; px/s&lt;/label&gt;&lt;br /&gt;\n    &lt;label&gt;重力：&lt;input value=&quot;10&quot; type=&quot;number&quot; id=&quot;g&quot; /&gt; px/s²&lt;/label&gt;&lt;br /&gt;\n    &lt;button onclick=&quot;createBall()&quot;&gt;来一个球&lt;/button&gt;\n&lt;/body&gt;\n&lt;script&gt;\n\n    function generateCubicBezier(v, g, t) {\n        var a = v / g;\n        var b = t + v / g;\n\n        return [[(a / 3 + (a + b) / 3 - a) / (b - a), (a * a / 3 + a * b * 2 / 3 - a * a) / (b * b - a * a)],\n        [(b / 3 + (a + b) / 3 - a) / (b - a), (b * b / 3 + a * b * 2 / 3 - a * a) / (b * b - a * a)]];\n    }\n\n    function createBall() {\n        var ball = document.createElement(&quot;div&quot;);\n        var t = Number(document.getElementById(&quot;t&quot;).value);\n        var vx = Number(document.getElementById(&quot;vx&quot;).value);\n        var vy = Number(document.getElementById(&quot;vy&quot;).value);\n        var g = Number(document.getElementById(&quot;g&quot;).value);\n        ball.className = &quot;ball&quot;;\n        document.body.appendChild(ball)\n        ball.style.transition = `left linear ${t}s, top cubic-bezier(${generateCubicBezier(vy, g, t)}) ${t}s`;\n        setTimeout(function () {\n            ball.style.left = `${vx * t}px`;\n            ball.style.top = `${vy * t + 0.5 * g * t * t}px`;\n        }, 100);\n        setTimeout(function () { document.body.removeChild(ball); }, t * 1000);\n    }\n\n&lt;/script&gt;\n\n&lt;/html&gt;\n```"}]}],"collapsed":true}],"parent":"root"},{"id":"92d7cb5e205e","title":"语法","children":[{"id":"2d05d4999887","title":"at 规则","parent":"92d7cb5e205e","children":[{"id":"7b215ccfd1be","title":"@charset ","children":[],"parent":"2d05d4999887","note":"#### @charset 用于提示 CSS 文件使用的字符编码方式，它如果被使用，必须出现在最前面。这个规则只在给出语法解析阶段前使用，并不影响页面上的展示效果。\n\n```\n@charset &quot;utf-8&quot;;\n```"},{"id":"eb58645aa866","title":"@import","children":[],"parent":"2d05d4999887","note":"#### @import 用于引入一个 CSS 文件所有内容（除了 @charset 规则不会被引入）\n\n```\n@import &quot;mystyle.css&quot;;\n@import url(&quot;mystyle.css&quot;);\n```"},{"id":"aa55cb681a9b","title":"@media","children":[],"parent":"2d05d4999887","note":"#### @media 能够对设备的类型进行一些判断，可以针对不同的屏幕尺寸设置不同的样式。\n\n```    \n@media screen and (max-width: 768px){\n     .container{\n        width:100%;\n        background-color: green;\n     }\n}\n```"},{"id":"37b21eed4f3b","title":"@page","children":[],"parent":"2d05d4999887","note":"&gt; @page 规则用于在打印文档时`（打印界面，而非可以滚动的浏览界面）`修改某些CSS属性。\n\n你不能用@page规则来修改所有的CSS属性，而是只能修改margin,orphans,widow 和 page breaks of the document。对其他属性的修改是无效的。\n\n---\n\n页面是一种特殊的盒模型结构，除了页面本身，还可以设置它周围的盒。\n\n```\n@page {\n  size: 8.5in 11in;\n  margin: 10%;\n\n  @top-left {\n    content: &quot;Hamlet&quot;;\n  }\n  @top-right {\n    content: &quot;Page &quot; counter(page);\n  }\n}\n```"},{"id":"a40388b347ef","title":"@counter-style","children":[],"parent":"2d05d4999887","note":"&gt; @counter-style 让开发者可以自定义counter的样式。 一个 `@counter-style规则` 定义了如何把一个计数器的值转化为字符串表示。"},{"id":"720e02cbc8de","title":"@keyframes","children":[],"parent":"2d05d4999887","note":"&gt; 使用 @keyframes 关键字来创建动画。\n\n```\n@keyframes moveTest {\n  /*百分比是指整个动画耗时的百分比*/\n  0% {\n    transform: translate(0px, 0px);\n  }\n  50% {\n    transform: translateY(200px);\n  }\n  100% {\n    transform: translate(200px,200px);\n  }\n}\n```"},{"id":"234a7ea1abdc","title":"@font-face","children":[],"parent":"2d05d4999887","note":"&gt; @font-face关键字来自定义 Web 字体。\n\n```\n@font-face {\n  font-family: &#39;shuangyuan&#39;;\n  src: url(&#39;../fonts/webfont.eot&#39;); /* IE9*/\n  src: url(&#39;../fonts/webfont.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), /* IE6-IE8 */\n    url(&#39;../fonts/webfont.woff&#39;) format(&#39;woff&#39;), /* chrome、firefox */\n    url(&#39;../fonts/webfont.ttf&#39;) format(&#39;truetype&#39;), /* chrome、firefox、opera、Safari, Android, iOS 4.2+*/\n    url(&#39;../fonts/webfont.svg#webfont&#39;) format(&#39;svg&#39;); /* iOS 4.1- */\n}\n```"},{"id":"352e216848ae","title":"@supports","children":[],"parent":"2d05d4999887"},{"id":"a1a3e7292af8","title":"@namespace","children":[],"parent":"2d05d4999887","note":"&gt; 分别给不同命名空间下的相同元素可以分别设置样式.\n\n```\n@namespace url(http://www.w3.org/1999/xhtml);\n@namespace svg url(http://www.w3.org/2000/svg);\n\n/* 匹配所有的XHTML &lt;a&gt; 元素, 因为 XHTML 是默认无前缀命名空间 */\na {}\n\n/* 匹配所有的 SVG &lt;a&gt; 元素 */\nsvg|a {}\n\n/* 匹配 XHTML 和 SVG &lt;a&gt; 元素 */\n*|a {}\n```"},{"id":"bb46a0c289f1","title":"@viewport","parent":"2d05d4999887","children":[],"note":"&gt; 用于设置视口的一些特性，不过兼容性目前不是很好，多数时候被 HTML 的 meta 代替。"}],"collapsed":true},{"id":"ed899d0320e1","title":"普通规则","parent":"92d7cb5e205e","children":[{"id":"5037e1c95f7e","title":"选择器","children":[{"id":"32b68909d5aa","title":"选择器分类","parent":"5037e1c95f7e","children":[{"id":"755df5c6358d","title":"简单选择器","children":[{"id":"1b4220c7898e","title":"标签选择器","parent":"755df5c6358d","children":[]},{"id":"72c1e951f77b","title":"id选择器","parent":"755df5c6358d","children":[]},{"id":"06384fdcfadf","title":"class选择器","parent":"755df5c6358d","children":[]},{"id":"a3945930ba83","title":"* 选择器","parent":"755df5c6358d","children":[]},{"id":"90a7f19f19fd","title":"属性选择器","parent":"755df5c6358d","children":[{"id":"c262f7a8352a","title":"[att]：是检查元素是否具有这个属性，只要元素有这个属性，不论属性是什么值，都可以被选中。","parent":"90a7f19f19fd","children":[]},{"id":"38988a49b21e","title":"[att=val] 精确匹配，检查一个元素属性的值是否是 val。","parent":"90a7f19f19fd","children":[]},{"id":"76a012615bc6","title":"[att~=val]多种匹配，检查一个元素的值是否是若干值之一，这里的 val 不是一个单一的值了，可以是用空格分隔的一个序列。","parent":"90a7f19f19fd","children":[]},{"id":"3669d649a0dc","title":"[att|=val] 检查一个元素的值是否是以 val 开头，它跟精确匹配的区别是属性只要以 val 开头即可，后面内容不管。","parent":"90a7f19f19fd","children":[]}],"note":"&gt; 有些 HTML 属性含有特殊字符，这个时候，可以`把 val 用引号括起来，形成一个 CSS 字符串。`CSS 字符串允许使用单双引号来规避特殊字符，也可以用反斜杠转义，这样，就可以表示出任意属性值啦。\n\n```\n// 选择有 type 属性为 text，并且有 class 属性的标签。\ninput[type=&quot;text&quot;][class=&quot;id&quot;] {\n  width: 20px;\n  height: 20px;\n} \n```","collapsed":false},{"id":"5e9fbf81fd0b","title":"伪类选择器","link":{"title":"MDN中列举多达60多个伪类","value":"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes","type":"url"},"parent":"755df5c6358d","children":[{"id":"0017fd56b916","title":"链接伪类","parent":"5e9fbf81fd0b","children":[{"id":"1b0cb5523347","title":":link","parent":"0017fd56b916","children":[]},{"id":"9105620bab95","title":":hover","parent":"0017fd56b916","children":[]},{"id":"c362e66b0a3c","title":":active","parent":"0017fd56b916","children":[]},{"id":"3fbd5294f1ee","title":":visited","parent":"0017fd56b916","children":[]},{"id":"8fbce7b7061c","title":":focus","parent":"0017fd56b916","children":[]}],"collapsed":true},{"id":"217347993628","title":"树结构关系伪类","parent":"5e9fbf81fd0b","children":[{"id":"9e4d04ab175b","title":":root","parent":"217347993628","children":[],"note":":root 表示 `&lt;html&gt;` 元素，除了优先级更高之外，与 html 选择器相同。"},{"id":"7b793b38e7ad","title":":empty","parent":"217347993628","children":[],"note":":empty   代表没有子元素的元素。子元素只可以是元素节点或文本（包括空格）。注释不算其子元素。\n\n\n```\n&lt;div class=&quot;box&quot;&gt;&lt;!-- I will be lime --&gt;&lt;/div&gt;\n&lt;div class=&quot;box&quot;&gt;I will be pink&lt;/div&gt;\n&lt;div class=&quot;box&quot;&gt;\n    &lt;!-- I will be red because of the whitespace around this comment --&gt;\n&lt;/div&gt;\n\n\n.box {\n    background: pink;\n    height: 80px;\n    width: 80px;\n}\n\n.box:empty {\n    background: lime;\n}\n```\n\n结果：只选中第一个div。"},{"id":"423936227ad5","title":":nth-child 和 :nth-last-child，:nth-of-type","parent":"217347993628","children":[]}],"collapsed":true},{"id":"99fc0ad28f4e","title":"逻辑伪类","parent":"5e9fbf81fd0b","children":[{"id":"19da1198533f","title":":not()","parent":"99fc0ad28f4e","children":[],"note":":not() 用来匹配不符合一组选择器的元素。由于它的作用是防止特定的元素被选中，它也被称为反选伪类。\n\n```\n/* 选择所有不是段落（p）的元素 */\n:not(p) {\n  color: blue;\n}\n```"}]},{"id":"9314457c26f6","title":"其他","parent":"5e9fbf81fd0b","children":[{"id":"65abd8eb1aba","title":"国际化","parent":"9314457c26f6","children":[{"id":"8eaedc514e49","title":":lang()","parent":"65abd8eb1aba","children":[],"note":"基于元素语言来匹配页面元素。\n\n```\n/* 选取任意的英文（en)段落 */\np:lang(en) {\n  quotes: &#39;\\201C&#39; &#39;\\201D&#39; &#39;\\2018&#39; &#39;\\2019&#39;;\n}\n```"}]},{"id":"615ffc83441b","title":"音视频","parent":"9314457c26f6","children":[{"id":"a3c96e5a8059","title":"：play","parent":"615ffc83441b","children":[]},{"id":"842711dfa3d0","title":"：pause","parent":"615ffc83441b","children":[]}],"note":"用于区分音视频播放状态"},{"id":"bc27684e406f","title":"<strike>时序</strike>","parent":"9314457c26f6","children":[{"id":"498541812a0a","title":"：current","parent":"bc27684e406f","children":[]},{"id":"d4202c917c71","title":"：past","parent":"bc27684e406f","children":[]},{"id":"a75826ca1119","title":"：future","parent":"bc27684e406f","children":[]}],"note":"用于配合读屏软件等时序性客户端的伪类。"},{"id":"d8c9e7683e90","title":"<strike>表格</strike>","parent":"9314457c26f6","children":[{"id":"3fec45a777bc","title":"：nth-col()","parent":"d8c9e7683e90","children":[]},{"id":"cfdf9ff84880","title":"：nth-last-col()","parent":"d8c9e7683e90","children":[]}]}]}],"collapsed":true},{"id":"ca21a878ebe2","title":"<b><font color=\"#f15a23\">伪元素</font></b>","parent":"755df5c6358d","children":[{"id":"91ef8c7b5ded","title":"::first-line","summaries":[],"parent":"ca21a878ebe2","children":[],"note":"### 将段落中的第一行字母转换成大写\n\n&gt; CSS 标准规定了 first-line 必须出现在最内层的块级元素之内。\n\n```\n&lt;div&gt;\n  &lt;p id=a&gt;First paragraph&lt;/p&gt;\n  &lt;p&gt;Second paragraph&lt;/p&gt;\n&lt;/div&gt;\n\n\ndiv&gt;p#a {\n    color:green;\n}\n\ndiv::first-line { \n    color:blue; \n}\n```\n这段代码最终结果第一行是蓝色。如果将p换成span就是绿色。\n\n\n\n\n```\n&lt;p&gt;abcd,\nefg.&lt;/p&gt;\n\np::first-line { text-transform: uppercase }\n\n输出：\nABCD, \nefg.\n\n```\n\n\n&gt;  ::first-line 伪元素只能在`块容器`中,所以,::first-line伪元素只能在一个display值为block, inline-block, table-cell 或者 table-caption中有用.。在其他的类型中，::first-line 是不起作用的.\n\n\n\n"},{"id":"2f3681493141","title":"::first-letter","parent":"ca21a878ebe2","children":[{"id":"70a8c041c688","title":"支持的属性","parent":"2f3681493141","children":[],"note":"![](https://static001.geekbang.org/resource/image/6e/48/6e050ee9f7a0b1657388271cceb0c548.png)"}],"note":"::first-letter会选中某 block-level element（块级元素）第一行的第一个字母，并且文字所处的行之前没有其他内容（如图片和内联的表格） 。\n\n&gt; 与 ::first-line不同，::first-letter不要求选中的块级元素的子元素也必须为块级元素。\n\n\n```\n&lt;div&gt;\n  &lt;span id=a&gt;First paragraph&lt;/span&gt;&lt;br/&gt;\n  &lt;span&gt;Second paragraph&lt;/span&gt;\n&lt;/div&gt;\n\n\ndiv&gt;span#a {\n    color:green;\n}\n\ndiv::first-line { \n    color:blue; \n}\n```\n\n结果：首字母变成了蓝色。\n\n\n"},{"id":"2b369e699083","title":"::before","parent":"ca21a878ebe2","children":[]},{"id":"d0175b58923e","title":"::after<br>","parent":"ca21a878ebe2","children":[],"note":"这两个伪元素`必须指定 content 属性`才会生效"}]}],"parent":"32b68909d5aa"},{"id":"b44408b4a43e","title":"复杂选择器","parent":"32b68909d5aa","children":[],"note":"复合选择器则是连写的简单选择器组合。"},{"id":"3012f1ba3a32","title":"复合选择器","children":[],"parent":"32b68909d5aa","note":"复杂选择器则是用空格、大于号、波浪线等符号连接的复合选择器"},{"id":"cad5baed431b","title":"选择器列表","parent":"32b68909d5aa","children":[],"note":"选择器列表是用逗号分隔的复杂选择器序列"}],"collapsed":false},{"id":"38bd3de35964","title":"选择器优先级","children":[],"parent":"5037e1c95f7e"}],"parent":"ed899d0320e1","collapsed":false},{"id":"7e5d06f6ed99","title":"声明列表","children":[{"id":"6c2f8d08e374","title":"属性","children":[{"id":"cf233678b94e","title":"变量","parent":"6c2f8d08e374","children":[],"note":"以`双中划线开头`的属性被当作变量，与之配合的则是 var 函数：\n\n```\n:root {\n  /* 变量赋值 */\n  --main-color: #06c;\n  --accent-color: #006;\n}\n/* 变量var取值 */\n#foo h1 {\n  color: var(--main-color);\n}\n```"}],"parent":"7e5d06f6ed99","note":"#### 属性是由中划线、下划线、字母等组成的标识符，CSS 还支持使用反斜杠转义。\n\n&gt; 需要注意的是：属性不允许使用连续的两个中划线开头，这样的属性会被认为是 CSS 变量。"},{"id":"6c4e430bc91b","title":"值","parent":"7e5d06f6ed99","children":[{"id":"a28df67f80b9","title":"值的类型","parent":"6c4e430bc91b","children":[{"id":"664a6475669c","title":"CSS 范围的关键字：initial，unset，inherit，任何属性都可以的关键字。","children":[],"parent":"a28df67f80b9"},{"id":"ba25194b050c","title":"字符串：比如 content 属性的值。","children":[],"parent":"a28df67f80b9"},{"id":"679d1e15774a","title":"URL：使用 url() 函数的 URL 值。","children":[],"parent":"a28df67f80b9"},{"id":"5fc26c23ab93","title":"整数 / 实数：比如 flex 属性。","children":[],"parent":"a28df67f80b9"},{"id":"b2ba918523d6","title":"维度：单位的整数 / 实数，比如 width 属性。","children":[],"parent":"a28df67f80b9"},{"id":"eb89fa206f5e","title":"百分比：大部分维度都支持。","children":[],"parent":"a28df67f80b9"},{"id":"1c6b616960d2","title":"颜色：比如 background-color 属性。","children":[],"parent":"a28df67f80b9"},{"id":"39eb988077e1","title":"图片：比如 background-image 属性。","children":[],"parent":"a28df67f80b9"},{"id":"5225f736fc2e","title":"2D 位置：比如 background-position 属性。","children":[],"parent":"a28df67f80b9"},{"id":"b65c75afb8c7","title":"函数：来自函数的值，比如 transform 属性。","children":[{"id":"bd3de133d211","title":"计算型函数","children":[{"id":"b54660989af1","title":"calc()","children":[],"parent":"bd3de133d211"},{"id":"37339a1ee5ce","title":"max() min()&nbsp;clamp()","children":[],"parent":"bd3de133d211","note":"max()、min() 和 clamp() 则是一些比较大小的函数\n\nmax() 表示取两数中较大的一个，\n\nmin() 表示取两数之中较小的一个，\n\nclamp() 则是给一个值限定一个范围，超出范围外则使用范围的最大或者最小值。"},{"id":"227b6042f07e","title":"toggle()<br>","children":[],"parent":"bd3de133d211","note":"&gt;  toggle() 函数在规则选中多于一个元素时生效，它会在几个值之间来回切换\n\n```\n// 比如我们要让一个列表项的样式圆点和方点间隔出现，可以使用下面代码：\n\nul { list-style-type: toggle(circle, square); }\n```"},{"id":"08908f7b960e","title":"attr()","children":[],"parent":"bd3de133d211","note":"### 获取html的属性值。\n\n&gt; 注意:  attr() 理论上能用于所有的CSS属性但目前支持的仅有伪元素的 content 属性，其他的属性和高级特性目前是实验性的\n\n```\n&lt;p data-foo=&quot;hello&quot;&gt;world&lt;/p&gt;\n\np:before {\n    content:attr(data-foo) &quot; &quot;; // 后面的空格是hello与world隔开\n}\n```"}],"parent":"b65c75afb8c7"}],"parent":"a28df67f80b9"}]},{"id":"4e8f678a434c","title":"函数<br>","children":[],"parent":"6c4e430bc91b","note":"网友总结的：\n\n```\n# 1. 图片\n\n* filter\n    * blur()\n    * brightness()\n    * contrast()\n    * drop-shadow()\n    * grayscale()\n    * hue_rotate()\n    * invert()\n    * opacity()\n    * saturate()\n    * sepia()\n* cross-fade()\n* element()\n* image-set()\n* imagefunction()\n\n# 2. 图形绘制\n* conic-gradient()\n* linear-gradient()\n* radial-gradient()\n* repeating-linear-gradient()\n* repeating-radial-gradient()\n* shape()\n\n# 3. 布局\n* calc()\n* clamp()\n* fit-content()\n* max()\n* min()\n* minmax()\n* repeat()\n\n# 4. 变形/动画\n* transform\n    * matrix()\n    * matrix3d()\n    * perspective()\n    * rotate()\n    * rotate3d()\n    * rotateX()\n    * rotateY()\n    * rotateZ()\n    * scale()\n    * scale3d()\n    * scaleX()\n    * scaleY()\n    * scaleZ()\n    * skew()\n    * skewX()\n    * skewY()\n    * translate()\n    * translate3d()\n    * translateX()\n    * translateY()\n    * translateZ()\n\n# 5. 环境与元素\n* var()\n* env()\n* attr()\n```"}],"collapsed":false}],"parent":"ed899d0320e1","note":"如：\n\n```\n{\n    color: red;\n    font-size: 14px;\n    ...\n}\n```","collapsed":true}]}],"parent":"root","collapsed":true},{"id":"cc356dfb7441","title":"扩展","parent":"root","children":[{"id":"c47ae9cdc435","title":"CSS实验：代码挖掘所有css属性","children":[],"parent":"cc356dfb7441"}]}]}},"meta":{"id":"5e61a2e3e4b09d2387944b6a","member":"5e488f9ee4b03d4e28b975b2","exportTime":"2020-03-19 10:56:23","diagramInfo":{"category":"mind_free","title":"3 CSS","created":"2020-03-06 09:09:55","creator":"5e488f9ee4b03d4e28b975b2","modified":"2020-03-06 09:11:06"},"type":"ProcessOn Schema File","version":"1.0"}}